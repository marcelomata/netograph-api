// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/ngapi/ngapi.proto

package ngapi

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type DatasetsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DatasetsRequest) Reset()         { *m = DatasetsRequest{} }
func (m *DatasetsRequest) String() string { return proto.CompactTextString(m) }
func (*DatasetsRequest) ProtoMessage()    {}
func (*DatasetsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ngapi_e0b646946dae5de6, []int{0}
}
func (m *DatasetsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DatasetsRequest.Unmarshal(m, b)
}
func (m *DatasetsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DatasetsRequest.Marshal(b, m, deterministic)
}
func (dst *DatasetsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DatasetsRequest.Merge(dst, src)
}
func (m *DatasetsRequest) XXX_Size() int {
	return xxx_messageInfo_DatasetsRequest.Size(m)
}
func (m *DatasetsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DatasetsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DatasetsRequest proto.InternalMessageInfo

type Dataset struct {
	Name                 string               `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description          string               `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Urlbase              string               `protobuf:"bytes,3,opt,name=urlbase,proto3" json:"urlbase,omitempty"`
	Deleted              *timestamp.Timestamp `protobuf:"bytes,4,opt,name=deleted,proto3" json:"deleted,omitempty"`
	Readonly             bool                 `protobuf:"varint,5,opt,name=readonly,proto3" json:"readonly,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Dataset) Reset()         { *m = Dataset{} }
func (m *Dataset) String() string { return proto.CompactTextString(m) }
func (*Dataset) ProtoMessage()    {}
func (*Dataset) Descriptor() ([]byte, []int) {
	return fileDescriptor_ngapi_e0b646946dae5de6, []int{1}
}
func (m *Dataset) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Dataset.Unmarshal(m, b)
}
func (m *Dataset) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Dataset.Marshal(b, m, deterministic)
}
func (dst *Dataset) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Dataset.Merge(dst, src)
}
func (m *Dataset) XXX_Size() int {
	return xxx_messageInfo_Dataset.Size(m)
}
func (m *Dataset) XXX_DiscardUnknown() {
	xxx_messageInfo_Dataset.DiscardUnknown(m)
}

var xxx_messageInfo_Dataset proto.InternalMessageInfo

func (m *Dataset) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Dataset) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Dataset) GetUrlbase() string {
	if m != nil {
		return m.Urlbase
	}
	return ""
}

func (m *Dataset) GetDeleted() *timestamp.Timestamp {
	if m != nil {
		return m.Deleted
	}
	return nil
}

func (m *Dataset) GetReadonly() bool {
	if m != nil {
		return m.Readonly
	}
	return false
}

type CapSummary struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Assets               string               `protobuf:"bytes,2,opt,name=assets,proto3" json:"assets,omitempty"`
	Roots                []*CapSummary_Root   `protobuf:"bytes,3,rep,name=roots,proto3" json:"roots,omitempty"`
	Time                 *timestamp.Timestamp `protobuf:"bytes,4,opt,name=time,proto3" json:"time,omitempty"`
	Plan                 *CapSummary_Plan     `protobuf:"bytes,5,opt,name=plan,proto3" json:"plan,omitempty"`
	Stats                *CapSummary_Stats    `protobuf:"bytes,6,opt,name=stats,proto3" json:"stats,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *CapSummary) Reset()         { *m = CapSummary{} }
func (m *CapSummary) String() string { return proto.CompactTextString(m) }
func (*CapSummary) ProtoMessage()    {}
func (*CapSummary) Descriptor() ([]byte, []int) {
	return fileDescriptor_ngapi_e0b646946dae5de6, []int{2}
}
func (m *CapSummary) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CapSummary.Unmarshal(m, b)
}
func (m *CapSummary) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CapSummary.Marshal(b, m, deterministic)
}
func (dst *CapSummary) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CapSummary.Merge(dst, src)
}
func (m *CapSummary) XXX_Size() int {
	return xxx_messageInfo_CapSummary.Size(m)
}
func (m *CapSummary) XXX_DiscardUnknown() {
	xxx_messageInfo_CapSummary.DiscardUnknown(m)
}

var xxx_messageInfo_CapSummary proto.InternalMessageInfo

func (m *CapSummary) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CapSummary) GetAssets() string {
	if m != nil {
		return m.Assets
	}
	return ""
}

func (m *CapSummary) GetRoots() []*CapSummary_Root {
	if m != nil {
		return m.Roots
	}
	return nil
}

func (m *CapSummary) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *CapSummary) GetPlan() *CapSummary_Plan {
	if m != nil {
		return m.Plan
	}
	return nil
}

func (m *CapSummary) GetStats() *CapSummary_Stats {
	if m != nil {
		return m.Stats
	}
	return nil
}

type CapSummary_Plan struct {
	Urls                 []string `protobuf:"bytes,1,rep,name=urls,proto3" json:"urls,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CapSummary_Plan) Reset()         { *m = CapSummary_Plan{} }
func (m *CapSummary_Plan) String() string { return proto.CompactTextString(m) }
func (*CapSummary_Plan) ProtoMessage()    {}
func (*CapSummary_Plan) Descriptor() ([]byte, []int) {
	return fileDescriptor_ngapi_e0b646946dae5de6, []int{2, 0}
}
func (m *CapSummary_Plan) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CapSummary_Plan.Unmarshal(m, b)
}
func (m *CapSummary_Plan) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CapSummary_Plan.Marshal(b, m, deterministic)
}
func (dst *CapSummary_Plan) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CapSummary_Plan.Merge(dst, src)
}
func (m *CapSummary_Plan) XXX_Size() int {
	return xxx_messageInfo_CapSummary_Plan.Size(m)
}
func (m *CapSummary_Plan) XXX_DiscardUnknown() {
	xxx_messageInfo_CapSummary_Plan.DiscardUnknown(m)
}

var xxx_messageInfo_CapSummary_Plan proto.InternalMessageInfo

func (m *CapSummary_Plan) GetUrls() []string {
	if m != nil {
		return m.Urls
	}
	return nil
}

type CapSummary_Root struct {
	Urls                 []string `protobuf:"bytes,1,rep,name=urls,proto3" json:"urls,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CapSummary_Root) Reset()         { *m = CapSummary_Root{} }
func (m *CapSummary_Root) String() string { return proto.CompactTextString(m) }
func (*CapSummary_Root) ProtoMessage()    {}
func (*CapSummary_Root) Descriptor() ([]byte, []int) {
	return fileDescriptor_ngapi_e0b646946dae5de6, []int{2, 1}
}
func (m *CapSummary_Root) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CapSummary_Root.Unmarshal(m, b)
}
func (m *CapSummary_Root) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CapSummary_Root.Marshal(b, m, deterministic)
}
func (dst *CapSummary_Root) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CapSummary_Root.Merge(dst, src)
}
func (m *CapSummary_Root) XXX_Size() int {
	return xxx_messageInfo_CapSummary_Root.Size(m)
}
func (m *CapSummary_Root) XXX_DiscardUnknown() {
	xxx_messageInfo_CapSummary_Root.DiscardUnknown(m)
}

var xxx_messageInfo_CapSummary_Root proto.InternalMessageInfo

func (m *CapSummary_Root) GetUrls() []string {
	if m != nil {
		return m.Urls
	}
	return nil
}

type CapSummary_Stats struct {
	Flows                int32    `protobuf:"varint,1,opt,name=flows,proto3" json:"flows,omitempty"`
	Websockets           int32    `protobuf:"varint,2,opt,name=websockets,proto3" json:"websockets,omitempty"`
	Hosts                int32    `protobuf:"varint,3,opt,name=hosts,proto3" json:"hosts,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CapSummary_Stats) Reset()         { *m = CapSummary_Stats{} }
func (m *CapSummary_Stats) String() string { return proto.CompactTextString(m) }
func (*CapSummary_Stats) ProtoMessage()    {}
func (*CapSummary_Stats) Descriptor() ([]byte, []int) {
	return fileDescriptor_ngapi_e0b646946dae5de6, []int{2, 2}
}
func (m *CapSummary_Stats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CapSummary_Stats.Unmarshal(m, b)
}
func (m *CapSummary_Stats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CapSummary_Stats.Marshal(b, m, deterministic)
}
func (dst *CapSummary_Stats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CapSummary_Stats.Merge(dst, src)
}
func (m *CapSummary_Stats) XXX_Size() int {
	return xxx_messageInfo_CapSummary_Stats.Size(m)
}
func (m *CapSummary_Stats) XXX_DiscardUnknown() {
	xxx_messageInfo_CapSummary_Stats.DiscardUnknown(m)
}

var xxx_messageInfo_CapSummary_Stats proto.InternalMessageInfo

func (m *CapSummary_Stats) GetFlows() int32 {
	if m != nil {
		return m.Flows
	}
	return 0
}

func (m *CapSummary_Stats) GetWebsockets() int32 {
	if m != nil {
		return m.Websockets
	}
	return 0
}

func (m *CapSummary_Stats) GetHosts() int32 {
	if m != nil {
		return m.Hosts
	}
	return 0
}

type Metadata struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Metadata) Reset()         { *m = Metadata{} }
func (m *Metadata) String() string { return proto.CompactTextString(m) }
func (*Metadata) ProtoMessage()    {}
func (*Metadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_ngapi_e0b646946dae5de6, []int{3}
}
func (m *Metadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Metadata.Unmarshal(m, b)
}
func (m *Metadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Metadata.Marshal(b, m, deterministic)
}
func (dst *Metadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Metadata.Merge(dst, src)
}
func (m *Metadata) XXX_Size() int {
	return xxx_messageInfo_Metadata.Size(m)
}
func (m *Metadata) XXX_DiscardUnknown() {
	xxx_messageInfo_Metadata.DiscardUnknown(m)
}

var xxx_messageInfo_Metadata proto.InternalMessageInfo

func (m *Metadata) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Metadata) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type CaptureInfoRequest struct {
	Dataset              string   `protobuf:"bytes,1,opt,name=dataset,proto3" json:"dataset,omitempty"`
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CaptureInfoRequest) Reset()         { *m = CaptureInfoRequest{} }
func (m *CaptureInfoRequest) String() string { return proto.CompactTextString(m) }
func (*CaptureInfoRequest) ProtoMessage()    {}
func (*CaptureInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ngapi_e0b646946dae5de6, []int{4}
}
func (m *CaptureInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CaptureInfoRequest.Unmarshal(m, b)
}
func (m *CaptureInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CaptureInfoRequest.Marshal(b, m, deterministic)
}
func (dst *CaptureInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CaptureInfoRequest.Merge(dst, src)
}
func (m *CaptureInfoRequest) XXX_Size() int {
	return xxx_messageInfo_CaptureInfoRequest.Size(m)
}
func (m *CaptureInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CaptureInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CaptureInfoRequest proto.InternalMessageInfo

func (m *CaptureInfoRequest) GetDataset() string {
	if m != nil {
		return m.Dataset
	}
	return ""
}

func (m *CaptureInfoRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type CaptureInfoResult struct {
	Capsummary           *CapSummary `protobuf:"bytes,1,opt,name=capsummary,proto3" json:"capsummary,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *CaptureInfoResult) Reset()         { *m = CaptureInfoResult{} }
func (m *CaptureInfoResult) String() string { return proto.CompactTextString(m) }
func (*CaptureInfoResult) ProtoMessage()    {}
func (*CaptureInfoResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_ngapi_e0b646946dae5de6, []int{5}
}
func (m *CaptureInfoResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CaptureInfoResult.Unmarshal(m, b)
}
func (m *CaptureInfoResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CaptureInfoResult.Marshal(b, m, deterministic)
}
func (dst *CaptureInfoResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CaptureInfoResult.Merge(dst, src)
}
func (m *CaptureInfoResult) XXX_Size() int {
	return xxx_messageInfo_CaptureInfoResult.Size(m)
}
func (m *CaptureInfoResult) XXX_DiscardUnknown() {
	xxx_messageInfo_CaptureInfoResult.DiscardUnknown(m)
}

var xxx_messageInfo_CaptureInfoResult proto.InternalMessageInfo

func (m *CaptureInfoResult) GetCapsummary() *CapSummary {
	if m != nil {
		return m.Capsummary
	}
	return nil
}

type CaptureLogRequest struct {
	Dataset              string   `protobuf:"bytes,1,opt,name=dataset,proto3" json:"dataset,omitempty"`
	Limit                int64    `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	Resume               string   `protobuf:"bytes,3,opt,name=resume,proto3" json:"resume,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CaptureLogRequest) Reset()         { *m = CaptureLogRequest{} }
func (m *CaptureLogRequest) String() string { return proto.CompactTextString(m) }
func (*CaptureLogRequest) ProtoMessage()    {}
func (*CaptureLogRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ngapi_e0b646946dae5de6, []int{6}
}
func (m *CaptureLogRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CaptureLogRequest.Unmarshal(m, b)
}
func (m *CaptureLogRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CaptureLogRequest.Marshal(b, m, deterministic)
}
func (dst *CaptureLogRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CaptureLogRequest.Merge(dst, src)
}
func (m *CaptureLogRequest) XXX_Size() int {
	return xxx_messageInfo_CaptureLogRequest.Size(m)
}
func (m *CaptureLogRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CaptureLogRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CaptureLogRequest proto.InternalMessageInfo

func (m *CaptureLogRequest) GetDataset() string {
	if m != nil {
		return m.Dataset
	}
	return ""
}

func (m *CaptureLogRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *CaptureLogRequest) GetResume() string {
	if m != nil {
		return m.Resume
	}
	return ""
}

type CaptureLogResult struct {
	Capsummary           *CapSummary `protobuf:"bytes,1,opt,name=capsummary,proto3" json:"capsummary,omitempty"`
	Resume               string      `protobuf:"bytes,2,opt,name=resume,proto3" json:"resume,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *CaptureLogResult) Reset()         { *m = CaptureLogResult{} }
func (m *CaptureLogResult) String() string { return proto.CompactTextString(m) }
func (*CaptureLogResult) ProtoMessage()    {}
func (*CaptureLogResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_ngapi_e0b646946dae5de6, []int{7}
}
func (m *CaptureLogResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CaptureLogResult.Unmarshal(m, b)
}
func (m *CaptureLogResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CaptureLogResult.Marshal(b, m, deterministic)
}
func (dst *CaptureLogResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CaptureLogResult.Merge(dst, src)
}
func (m *CaptureLogResult) XXX_Size() int {
	return xxx_messageInfo_CaptureLogResult.Size(m)
}
func (m *CaptureLogResult) XXX_DiscardUnknown() {
	xxx_messageInfo_CaptureLogResult.DiscardUnknown(m)
}

var xxx_messageInfo_CaptureLogResult proto.InternalMessageInfo

func (m *CaptureLogResult) GetCapsummary() *CapSummary {
	if m != nil {
		return m.Capsummary
	}
	return nil
}

func (m *CaptureLogResult) GetResume() string {
	if m != nil {
		return m.Resume
	}
	return ""
}

type DomainHistoryRequest struct {
	Dataset              string   `protobuf:"bytes,1,opt,name=dataset,proto3" json:"dataset,omitempty"`
	Domain               string   `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`
	Limit                int64    `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DomainHistoryRequest) Reset()         { *m = DomainHistoryRequest{} }
func (m *DomainHistoryRequest) String() string { return proto.CompactTextString(m) }
func (*DomainHistoryRequest) ProtoMessage()    {}
func (*DomainHistoryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ngapi_e0b646946dae5de6, []int{8}
}
func (m *DomainHistoryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DomainHistoryRequest.Unmarshal(m, b)
}
func (m *DomainHistoryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DomainHistoryRequest.Marshal(b, m, deterministic)
}
func (dst *DomainHistoryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DomainHistoryRequest.Merge(dst, src)
}
func (m *DomainHistoryRequest) XXX_Size() int {
	return xxx_messageInfo_DomainHistoryRequest.Size(m)
}
func (m *DomainHistoryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DomainHistoryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DomainHistoryRequest proto.InternalMessageInfo

func (m *DomainHistoryRequest) GetDataset() string {
	if m != nil {
		return m.Dataset
	}
	return ""
}

func (m *DomainHistoryRequest) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *DomainHistoryRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type DomainHistoryResult struct {
	Capsummary           *CapSummary `protobuf:"bytes,1,opt,name=capsummary,proto3" json:"capsummary,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *DomainHistoryResult) Reset()         { *m = DomainHistoryResult{} }
func (m *DomainHistoryResult) String() string { return proto.CompactTextString(m) }
func (*DomainHistoryResult) ProtoMessage()    {}
func (*DomainHistoryResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_ngapi_e0b646946dae5de6, []int{9}
}
func (m *DomainHistoryResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DomainHistoryResult.Unmarshal(m, b)
}
func (m *DomainHistoryResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DomainHistoryResult.Marshal(b, m, deterministic)
}
func (dst *DomainHistoryResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DomainHistoryResult.Merge(dst, src)
}
func (m *DomainHistoryResult) XXX_Size() int {
	return xxx_messageInfo_DomainHistoryResult.Size(m)
}
func (m *DomainHistoryResult) XXX_DiscardUnknown() {
	xxx_messageInfo_DomainHistoryResult.DiscardUnknown(m)
}

var xxx_messageInfo_DomainHistoryResult proto.InternalMessageInfo

func (m *DomainHistoryResult) GetCapsummary() *CapSummary {
	if m != nil {
		return m.Capsummary
	}
	return nil
}

type DomainSearchRequest struct {
	Dataset              string   `protobuf:"bytes,1,opt,name=dataset,proto3" json:"dataset,omitempty"`
	Query                string   `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	Limit                int64    `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Resume               string   `protobuf:"bytes,4,opt,name=resume,proto3" json:"resume,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DomainSearchRequest) Reset()         { *m = DomainSearchRequest{} }
func (m *DomainSearchRequest) String() string { return proto.CompactTextString(m) }
func (*DomainSearchRequest) ProtoMessage()    {}
func (*DomainSearchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ngapi_e0b646946dae5de6, []int{10}
}
func (m *DomainSearchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DomainSearchRequest.Unmarshal(m, b)
}
func (m *DomainSearchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DomainSearchRequest.Marshal(b, m, deterministic)
}
func (dst *DomainSearchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DomainSearchRequest.Merge(dst, src)
}
func (m *DomainSearchRequest) XXX_Size() int {
	return xxx_messageInfo_DomainSearchRequest.Size(m)
}
func (m *DomainSearchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DomainSearchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DomainSearchRequest proto.InternalMessageInfo

func (m *DomainSearchRequest) GetDataset() string {
	if m != nil {
		return m.Dataset
	}
	return ""
}

func (m *DomainSearchRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *DomainSearchRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *DomainSearchRequest) GetResume() string {
	if m != nil {
		return m.Resume
	}
	return ""
}

type DomainSearchResult struct {
	Domain               string      `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	Resume               string      `protobuf:"bytes,2,opt,name=resume,proto3" json:"resume,omitempty"`
	Latestcapture        *CapSummary `protobuf:"bytes,3,opt,name=latestcapture,proto3" json:"latestcapture,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *DomainSearchResult) Reset()         { *m = DomainSearchResult{} }
func (m *DomainSearchResult) String() string { return proto.CompactTextString(m) }
func (*DomainSearchResult) ProtoMessage()    {}
func (*DomainSearchResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_ngapi_e0b646946dae5de6, []int{11}
}
func (m *DomainSearchResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DomainSearchResult.Unmarshal(m, b)
}
func (m *DomainSearchResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DomainSearchResult.Marshal(b, m, deterministic)
}
func (dst *DomainSearchResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DomainSearchResult.Merge(dst, src)
}
func (m *DomainSearchResult) XXX_Size() int {
	return xxx_messageInfo_DomainSearchResult.Size(m)
}
func (m *DomainSearchResult) XXX_DiscardUnknown() {
	xxx_messageInfo_DomainSearchResult.DiscardUnknown(m)
}

var xxx_messageInfo_DomainSearchResult proto.InternalMessageInfo

func (m *DomainSearchResult) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *DomainSearchResult) GetResume() string {
	if m != nil {
		return m.Resume
	}
	return ""
}

func (m *DomainSearchResult) GetLatestcapture() *CapSummary {
	if m != nil {
		return m.Latestcapture
	}
	return nil
}

type DomainsForIPRequest struct {
	Dataset              string   `protobuf:"bytes,1,opt,name=dataset,proto3" json:"dataset,omitempty"`
	Ip                   string   `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	Limit                int64    `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Resume               string   `protobuf:"bytes,4,opt,name=resume,proto3" json:"resume,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DomainsForIPRequest) Reset()         { *m = DomainsForIPRequest{} }
func (m *DomainsForIPRequest) String() string { return proto.CompactTextString(m) }
func (*DomainsForIPRequest) ProtoMessage()    {}
func (*DomainsForIPRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ngapi_e0b646946dae5de6, []int{12}
}
func (m *DomainsForIPRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DomainsForIPRequest.Unmarshal(m, b)
}
func (m *DomainsForIPRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DomainsForIPRequest.Marshal(b, m, deterministic)
}
func (dst *DomainsForIPRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DomainsForIPRequest.Merge(dst, src)
}
func (m *DomainsForIPRequest) XXX_Size() int {
	return xxx_messageInfo_DomainsForIPRequest.Size(m)
}
func (m *DomainsForIPRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DomainsForIPRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DomainsForIPRequest proto.InternalMessageInfo

func (m *DomainsForIPRequest) GetDataset() string {
	if m != nil {
		return m.Dataset
	}
	return ""
}

func (m *DomainsForIPRequest) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *DomainsForIPRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *DomainsForIPRequest) GetResume() string {
	if m != nil {
		return m.Resume
	}
	return ""
}

type DomainsForIPResult struct {
	Domain               string      `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	Ip                   string      `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	Latestcapture        *CapSummary `protobuf:"bytes,3,opt,name=latestcapture,proto3" json:"latestcapture,omitempty"`
	Associations         []string    `protobuf:"bytes,4,rep,name=associations,proto3" json:"associations,omitempty"`
	Resume               string      `protobuf:"bytes,5,opt,name=resume,proto3" json:"resume,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *DomainsForIPResult) Reset()         { *m = DomainsForIPResult{} }
func (m *DomainsForIPResult) String() string { return proto.CompactTextString(m) }
func (*DomainsForIPResult) ProtoMessage()    {}
func (*DomainsForIPResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_ngapi_e0b646946dae5de6, []int{13}
}
func (m *DomainsForIPResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DomainsForIPResult.Unmarshal(m, b)
}
func (m *DomainsForIPResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DomainsForIPResult.Marshal(b, m, deterministic)
}
func (dst *DomainsForIPResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DomainsForIPResult.Merge(dst, src)
}
func (m *DomainsForIPResult) XXX_Size() int {
	return xxx_messageInfo_DomainsForIPResult.Size(m)
}
func (m *DomainsForIPResult) XXX_DiscardUnknown() {
	xxx_messageInfo_DomainsForIPResult.DiscardUnknown(m)
}

var xxx_messageInfo_DomainsForIPResult proto.InternalMessageInfo

func (m *DomainsForIPResult) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *DomainsForIPResult) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *DomainsForIPResult) GetLatestcapture() *CapSummary {
	if m != nil {
		return m.Latestcapture
	}
	return nil
}

func (m *DomainsForIPResult) GetAssociations() []string {
	if m != nil {
		return m.Associations
	}
	return nil
}

func (m *DomainsForIPResult) GetResume() string {
	if m != nil {
		return m.Resume
	}
	return ""
}

type IPHistoryRequest struct {
	Dataset              string   `protobuf:"bytes,1,opt,name=dataset,proto3" json:"dataset,omitempty"`
	Ip                   string   `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	Limit                int64    `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IPHistoryRequest) Reset()         { *m = IPHistoryRequest{} }
func (m *IPHistoryRequest) String() string { return proto.CompactTextString(m) }
func (*IPHistoryRequest) ProtoMessage()    {}
func (*IPHistoryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ngapi_e0b646946dae5de6, []int{14}
}
func (m *IPHistoryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IPHistoryRequest.Unmarshal(m, b)
}
func (m *IPHistoryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IPHistoryRequest.Marshal(b, m, deterministic)
}
func (dst *IPHistoryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IPHistoryRequest.Merge(dst, src)
}
func (m *IPHistoryRequest) XXX_Size() int {
	return xxx_messageInfo_IPHistoryRequest.Size(m)
}
func (m *IPHistoryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IPHistoryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IPHistoryRequest proto.InternalMessageInfo

func (m *IPHistoryRequest) GetDataset() string {
	if m != nil {
		return m.Dataset
	}
	return ""
}

func (m *IPHistoryRequest) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *IPHistoryRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type IPHistoryResult struct {
	Capsummary           *CapSummary `protobuf:"bytes,1,opt,name=capsummary,proto3" json:"capsummary,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *IPHistoryResult) Reset()         { *m = IPHistoryResult{} }
func (m *IPHistoryResult) String() string { return proto.CompactTextString(m) }
func (*IPHistoryResult) ProtoMessage()    {}
func (*IPHistoryResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_ngapi_e0b646946dae5de6, []int{15}
}
func (m *IPHistoryResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IPHistoryResult.Unmarshal(m, b)
}
func (m *IPHistoryResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IPHistoryResult.Marshal(b, m, deterministic)
}
func (dst *IPHistoryResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IPHistoryResult.Merge(dst, src)
}
func (m *IPHistoryResult) XXX_Size() int {
	return xxx_messageInfo_IPHistoryResult.Size(m)
}
func (m *IPHistoryResult) XXX_DiscardUnknown() {
	xxx_messageInfo_IPHistoryResult.DiscardUnknown(m)
}

var xxx_messageInfo_IPHistoryResult proto.InternalMessageInfo

func (m *IPHistoryResult) GetCapsummary() *CapSummary {
	if m != nil {
		return m.Capsummary
	}
	return nil
}

type IPLogSearchRequest struct {
	Dataset              string   `protobuf:"bytes,1,opt,name=dataset,proto3" json:"dataset,omitempty"`
	Ip                   string   `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	Limit                int64    `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Resume               string   `protobuf:"bytes,4,opt,name=resume,proto3" json:"resume,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IPLogSearchRequest) Reset()         { *m = IPLogSearchRequest{} }
func (m *IPLogSearchRequest) String() string { return proto.CompactTextString(m) }
func (*IPLogSearchRequest) ProtoMessage()    {}
func (*IPLogSearchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ngapi_e0b646946dae5de6, []int{16}
}
func (m *IPLogSearchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IPLogSearchRequest.Unmarshal(m, b)
}
func (m *IPLogSearchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IPLogSearchRequest.Marshal(b, m, deterministic)
}
func (dst *IPLogSearchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IPLogSearchRequest.Merge(dst, src)
}
func (m *IPLogSearchRequest) XXX_Size() int {
	return xxx_messageInfo_IPLogSearchRequest.Size(m)
}
func (m *IPLogSearchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IPLogSearchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IPLogSearchRequest proto.InternalMessageInfo

func (m *IPLogSearchRequest) GetDataset() string {
	if m != nil {
		return m.Dataset
	}
	return ""
}

func (m *IPLogSearchRequest) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *IPLogSearchRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *IPLogSearchRequest) GetResume() string {
	if m != nil {
		return m.Resume
	}
	return ""
}

type IPLogSearchResult struct {
	Capsummary           *CapSummary `protobuf:"bytes,1,opt,name=capsummary,proto3" json:"capsummary,omitempty"`
	Ip                   string      `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	Resume               string      `protobuf:"bytes,3,opt,name=resume,proto3" json:"resume,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *IPLogSearchResult) Reset()         { *m = IPLogSearchResult{} }
func (m *IPLogSearchResult) String() string { return proto.CompactTextString(m) }
func (*IPLogSearchResult) ProtoMessage()    {}
func (*IPLogSearchResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_ngapi_e0b646946dae5de6, []int{17}
}
func (m *IPLogSearchResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IPLogSearchResult.Unmarshal(m, b)
}
func (m *IPLogSearchResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IPLogSearchResult.Marshal(b, m, deterministic)
}
func (dst *IPLogSearchResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IPLogSearchResult.Merge(dst, src)
}
func (m *IPLogSearchResult) XXX_Size() int {
	return xxx_messageInfo_IPLogSearchResult.Size(m)
}
func (m *IPLogSearchResult) XXX_DiscardUnknown() {
	xxx_messageInfo_IPLogSearchResult.DiscardUnknown(m)
}

var xxx_messageInfo_IPLogSearchResult proto.InternalMessageInfo

func (m *IPLogSearchResult) GetCapsummary() *CapSummary {
	if m != nil {
		return m.Capsummary
	}
	return nil
}

func (m *IPLogSearchResult) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *IPLogSearchResult) GetResume() string {
	if m != nil {
		return m.Resume
	}
	return ""
}

type IPSearchResult struct {
	Ip                   string      `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Resume               string      `protobuf:"bytes,2,opt,name=resume,proto3" json:"resume,omitempty"`
	Latestcapture        *CapSummary `protobuf:"bytes,3,opt,name=latestcapture,proto3" json:"latestcapture,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *IPSearchResult) Reset()         { *m = IPSearchResult{} }
func (m *IPSearchResult) String() string { return proto.CompactTextString(m) }
func (*IPSearchResult) ProtoMessage()    {}
func (*IPSearchResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_ngapi_e0b646946dae5de6, []int{18}
}
func (m *IPSearchResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IPSearchResult.Unmarshal(m, b)
}
func (m *IPSearchResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IPSearchResult.Marshal(b, m, deterministic)
}
func (dst *IPSearchResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IPSearchResult.Merge(dst, src)
}
func (m *IPSearchResult) XXX_Size() int {
	return xxx_messageInfo_IPSearchResult.Size(m)
}
func (m *IPSearchResult) XXX_DiscardUnknown() {
	xxx_messageInfo_IPSearchResult.DiscardUnknown(m)
}

var xxx_messageInfo_IPSearchResult proto.InternalMessageInfo

func (m *IPSearchResult) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *IPSearchResult) GetResume() string {
	if m != nil {
		return m.Resume
	}
	return ""
}

func (m *IPSearchResult) GetLatestcapture() *CapSummary {
	if m != nil {
		return m.Latestcapture
	}
	return nil
}

type IPSearchRequest struct {
	Dataset              string   `protobuf:"bytes,1,opt,name=dataset,proto3" json:"dataset,omitempty"`
	Ip                   string   `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	Mask                 int32    `protobuf:"varint,3,opt,name=mask,proto3" json:"mask,omitempty"`
	Limit                int64    `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	Resume               string   `protobuf:"bytes,5,opt,name=resume,proto3" json:"resume,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IPSearchRequest) Reset()         { *m = IPSearchRequest{} }
func (m *IPSearchRequest) String() string { return proto.CompactTextString(m) }
func (*IPSearchRequest) ProtoMessage()    {}
func (*IPSearchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ngapi_e0b646946dae5de6, []int{19}
}
func (m *IPSearchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IPSearchRequest.Unmarshal(m, b)
}
func (m *IPSearchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IPSearchRequest.Marshal(b, m, deterministic)
}
func (dst *IPSearchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IPSearchRequest.Merge(dst, src)
}
func (m *IPSearchRequest) XXX_Size() int {
	return xxx_messageInfo_IPSearchRequest.Size(m)
}
func (m *IPSearchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IPSearchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IPSearchRequest proto.InternalMessageInfo

func (m *IPSearchRequest) GetDataset() string {
	if m != nil {
		return m.Dataset
	}
	return ""
}

func (m *IPSearchRequest) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *IPSearchRequest) GetMask() int32 {
	if m != nil {
		return m.Mask
	}
	return 0
}

func (m *IPSearchRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *IPSearchRequest) GetResume() string {
	if m != nil {
		return m.Resume
	}
	return ""
}

type IPsForDomainRequest struct {
	Dataset              string   `protobuf:"bytes,1,opt,name=dataset,proto3" json:"dataset,omitempty"`
	Query                string   `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	Limit                int64    `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Resume               string   `protobuf:"bytes,4,opt,name=resume,proto3" json:"resume,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IPsForDomainRequest) Reset()         { *m = IPsForDomainRequest{} }
func (m *IPsForDomainRequest) String() string { return proto.CompactTextString(m) }
func (*IPsForDomainRequest) ProtoMessage()    {}
func (*IPsForDomainRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ngapi_e0b646946dae5de6, []int{20}
}
func (m *IPsForDomainRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IPsForDomainRequest.Unmarshal(m, b)
}
func (m *IPsForDomainRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IPsForDomainRequest.Marshal(b, m, deterministic)
}
func (dst *IPsForDomainRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IPsForDomainRequest.Merge(dst, src)
}
func (m *IPsForDomainRequest) XXX_Size() int {
	return xxx_messageInfo_IPsForDomainRequest.Size(m)
}
func (m *IPsForDomainRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IPsForDomainRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IPsForDomainRequest proto.InternalMessageInfo

func (m *IPsForDomainRequest) GetDataset() string {
	if m != nil {
		return m.Dataset
	}
	return ""
}

func (m *IPsForDomainRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *IPsForDomainRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *IPsForDomainRequest) GetResume() string {
	if m != nil {
		return m.Resume
	}
	return ""
}

type IPsForDomainResult struct {
	Domain               string      `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	Ip                   string      `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	Latestcapture        *CapSummary `protobuf:"bytes,3,opt,name=latestcapture,proto3" json:"latestcapture,omitempty"`
	Associations         []string    `protobuf:"bytes,4,rep,name=associations,proto3" json:"associations,omitempty"`
	Resume               string      `protobuf:"bytes,5,opt,name=resume,proto3" json:"resume,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *IPsForDomainResult) Reset()         { *m = IPsForDomainResult{} }
func (m *IPsForDomainResult) String() string { return proto.CompactTextString(m) }
func (*IPsForDomainResult) ProtoMessage()    {}
func (*IPsForDomainResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_ngapi_e0b646946dae5de6, []int{21}
}
func (m *IPsForDomainResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IPsForDomainResult.Unmarshal(m, b)
}
func (m *IPsForDomainResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IPsForDomainResult.Marshal(b, m, deterministic)
}
func (dst *IPsForDomainResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IPsForDomainResult.Merge(dst, src)
}
func (m *IPsForDomainResult) XXX_Size() int {
	return xxx_messageInfo_IPsForDomainResult.Size(m)
}
func (m *IPsForDomainResult) XXX_DiscardUnknown() {
	xxx_messageInfo_IPsForDomainResult.DiscardUnknown(m)
}

var xxx_messageInfo_IPsForDomainResult proto.InternalMessageInfo

func (m *IPsForDomainResult) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *IPsForDomainResult) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *IPsForDomainResult) GetLatestcapture() *CapSummary {
	if m != nil {
		return m.Latestcapture
	}
	return nil
}

func (m *IPsForDomainResult) GetAssociations() []string {
	if m != nil {
		return m.Associations
	}
	return nil
}

func (m *IPsForDomainResult) GetResume() string {
	if m != nil {
		return m.Resume
	}
	return ""
}

type MetaForCaptureRequest struct {
	Dataset              string   `protobuf:"bytes,1,opt,name=dataset,proto3" json:"dataset,omitempty"`
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Limit                int64    `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Resume               string   `protobuf:"bytes,4,opt,name=resume,proto3" json:"resume,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MetaForCaptureRequest) Reset()         { *m = MetaForCaptureRequest{} }
func (m *MetaForCaptureRequest) String() string { return proto.CompactTextString(m) }
func (*MetaForCaptureRequest) ProtoMessage()    {}
func (*MetaForCaptureRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ngapi_e0b646946dae5de6, []int{22}
}
func (m *MetaForCaptureRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetaForCaptureRequest.Unmarshal(m, b)
}
func (m *MetaForCaptureRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetaForCaptureRequest.Marshal(b, m, deterministic)
}
func (dst *MetaForCaptureRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetaForCaptureRequest.Merge(dst, src)
}
func (m *MetaForCaptureRequest) XXX_Size() int {
	return xxx_messageInfo_MetaForCaptureRequest.Size(m)
}
func (m *MetaForCaptureRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MetaForCaptureRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MetaForCaptureRequest proto.InternalMessageInfo

func (m *MetaForCaptureRequest) GetDataset() string {
	if m != nil {
		return m.Dataset
	}
	return ""
}

func (m *MetaForCaptureRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MetaForCaptureRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *MetaForCaptureRequest) GetResume() string {
	if m != nil {
		return m.Resume
	}
	return ""
}

type MetaForCaptureResult struct {
	Meta                 *Metadata            `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	Time                 *timestamp.Timestamp `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
	Resume               string               `protobuf:"bytes,3,opt,name=resume,proto3" json:"resume,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *MetaForCaptureResult) Reset()         { *m = MetaForCaptureResult{} }
func (m *MetaForCaptureResult) String() string { return proto.CompactTextString(m) }
func (*MetaForCaptureResult) ProtoMessage()    {}
func (*MetaForCaptureResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_ngapi_e0b646946dae5de6, []int{23}
}
func (m *MetaForCaptureResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetaForCaptureResult.Unmarshal(m, b)
}
func (m *MetaForCaptureResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetaForCaptureResult.Marshal(b, m, deterministic)
}
func (dst *MetaForCaptureResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetaForCaptureResult.Merge(dst, src)
}
func (m *MetaForCaptureResult) XXX_Size() int {
	return xxx_messageInfo_MetaForCaptureResult.Size(m)
}
func (m *MetaForCaptureResult) XXX_DiscardUnknown() {
	xxx_messageInfo_MetaForCaptureResult.DiscardUnknown(m)
}

var xxx_messageInfo_MetaForCaptureResult proto.InternalMessageInfo

func (m *MetaForCaptureResult) GetMeta() *Metadata {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *MetaForCaptureResult) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

func (m *MetaForCaptureResult) GetResume() string {
	if m != nil {
		return m.Resume
	}
	return ""
}

type MetaSearchRequest struct {
	Dataset              string   `protobuf:"bytes,1,opt,name=dataset,proto3" json:"dataset,omitempty"`
	Query                string   `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	Limit                int64    `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Resume               string   `protobuf:"bytes,4,opt,name=resume,proto3" json:"resume,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MetaSearchRequest) Reset()         { *m = MetaSearchRequest{} }
func (m *MetaSearchRequest) String() string { return proto.CompactTextString(m) }
func (*MetaSearchRequest) ProtoMessage()    {}
func (*MetaSearchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ngapi_e0b646946dae5de6, []int{24}
}
func (m *MetaSearchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetaSearchRequest.Unmarshal(m, b)
}
func (m *MetaSearchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetaSearchRequest.Marshal(b, m, deterministic)
}
func (dst *MetaSearchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetaSearchRequest.Merge(dst, src)
}
func (m *MetaSearchRequest) XXX_Size() int {
	return xxx_messageInfo_MetaSearchRequest.Size(m)
}
func (m *MetaSearchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MetaSearchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MetaSearchRequest proto.InternalMessageInfo

func (m *MetaSearchRequest) GetDataset() string {
	if m != nil {
		return m.Dataset
	}
	return ""
}

func (m *MetaSearchRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *MetaSearchRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *MetaSearchRequest) GetResume() string {
	if m != nil {
		return m.Resume
	}
	return ""
}

type MetaSearchResult struct {
	Meta                 *Metadata   `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	Resume               string      `protobuf:"bytes,3,opt,name=resume,proto3" json:"resume,omitempty"`
	Capsummary           *CapSummary `protobuf:"bytes,4,opt,name=capsummary,proto3" json:"capsummary,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *MetaSearchResult) Reset()         { *m = MetaSearchResult{} }
func (m *MetaSearchResult) String() string { return proto.CompactTextString(m) }
func (*MetaSearchResult) ProtoMessage()    {}
func (*MetaSearchResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_ngapi_e0b646946dae5de6, []int{25}
}
func (m *MetaSearchResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetaSearchResult.Unmarshal(m, b)
}
func (m *MetaSearchResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetaSearchResult.Marshal(b, m, deterministic)
}
func (dst *MetaSearchResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetaSearchResult.Merge(dst, src)
}
func (m *MetaSearchResult) XXX_Size() int {
	return xxx_messageInfo_MetaSearchResult.Size(m)
}
func (m *MetaSearchResult) XXX_DiscardUnknown() {
	xxx_messageInfo_MetaSearchResult.DiscardUnknown(m)
}

var xxx_messageInfo_MetaSearchResult proto.InternalMessageInfo

func (m *MetaSearchResult) GetMeta() *Metadata {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *MetaSearchResult) GetResume() string {
	if m != nil {
		return m.Resume
	}
	return ""
}

func (m *MetaSearchResult) GetCapsummary() *CapSummary {
	if m != nil {
		return m.Capsummary
	}
	return nil
}

type TempCaptureRequest struct {
	Notification         string      `protobuf:"bytes,1,opt,name=notification,proto3" json:"notification,omitempty"`
	Urls                 []string    `protobuf:"bytes,2,rep,name=urls,proto3" json:"urls,omitempty"`
	Meta                 []*Metadata `protobuf:"bytes,3,rep,name=meta,proto3" json:"meta,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *TempCaptureRequest) Reset()         { *m = TempCaptureRequest{} }
func (m *TempCaptureRequest) String() string { return proto.CompactTextString(m) }
func (*TempCaptureRequest) ProtoMessage()    {}
func (*TempCaptureRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ngapi_e0b646946dae5de6, []int{26}
}
func (m *TempCaptureRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TempCaptureRequest.Unmarshal(m, b)
}
func (m *TempCaptureRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TempCaptureRequest.Marshal(b, m, deterministic)
}
func (dst *TempCaptureRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TempCaptureRequest.Merge(dst, src)
}
func (m *TempCaptureRequest) XXX_Size() int {
	return xxx_messageInfo_TempCaptureRequest.Size(m)
}
func (m *TempCaptureRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TempCaptureRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TempCaptureRequest proto.InternalMessageInfo

func (m *TempCaptureRequest) GetNotification() string {
	if m != nil {
		return m.Notification
	}
	return ""
}

func (m *TempCaptureRequest) GetUrls() []string {
	if m != nil {
		return m.Urls
	}
	return nil
}

func (m *TempCaptureRequest) GetMeta() []*Metadata {
	if m != nil {
		return m.Meta
	}
	return nil
}

type TempCaptureResult struct {
	Assets               string   `protobuf:"bytes,1,opt,name=assets,proto3" json:"assets,omitempty"`
	Id                   string   `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TempCaptureResult) Reset()         { *m = TempCaptureResult{} }
func (m *TempCaptureResult) String() string { return proto.CompactTextString(m) }
func (*TempCaptureResult) ProtoMessage()    {}
func (*TempCaptureResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_ngapi_e0b646946dae5de6, []int{27}
}
func (m *TempCaptureResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TempCaptureResult.Unmarshal(m, b)
}
func (m *TempCaptureResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TempCaptureResult.Marshal(b, m, deterministic)
}
func (dst *TempCaptureResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TempCaptureResult.Merge(dst, src)
}
func (m *TempCaptureResult) XXX_Size() int {
	return xxx_messageInfo_TempCaptureResult.Size(m)
}
func (m *TempCaptureResult) XXX_DiscardUnknown() {
	xxx_messageInfo_TempCaptureResult.DiscardUnknown(m)
}

var xxx_messageInfo_TempCaptureResult proto.InternalMessageInfo

func (m *TempCaptureResult) GetAssets() string {
	if m != nil {
		return m.Assets
	}
	return ""
}

func (m *TempCaptureResult) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type SubmitCaptureRequest struct {
	Dataset              string      `protobuf:"bytes,1,opt,name=dataset,proto3" json:"dataset,omitempty"`
	Notification         string      `protobuf:"bytes,2,opt,name=notification,proto3" json:"notification,omitempty"`
	Urls                 []string    `protobuf:"bytes,3,rep,name=urls,proto3" json:"urls,omitempty"`
	Meta                 []*Metadata `protobuf:"bytes,4,rep,name=meta,proto3" json:"meta,omitempty"`
	Skiprecent           int64       `protobuf:"varint,5,opt,name=skiprecent,proto3" json:"skiprecent,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *SubmitCaptureRequest) Reset()         { *m = SubmitCaptureRequest{} }
func (m *SubmitCaptureRequest) String() string { return proto.CompactTextString(m) }
func (*SubmitCaptureRequest) ProtoMessage()    {}
func (*SubmitCaptureRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ngapi_e0b646946dae5de6, []int{28}
}
func (m *SubmitCaptureRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubmitCaptureRequest.Unmarshal(m, b)
}
func (m *SubmitCaptureRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubmitCaptureRequest.Marshal(b, m, deterministic)
}
func (dst *SubmitCaptureRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubmitCaptureRequest.Merge(dst, src)
}
func (m *SubmitCaptureRequest) XXX_Size() int {
	return xxx_messageInfo_SubmitCaptureRequest.Size(m)
}
func (m *SubmitCaptureRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubmitCaptureRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubmitCaptureRequest proto.InternalMessageInfo

func (m *SubmitCaptureRequest) GetDataset() string {
	if m != nil {
		return m.Dataset
	}
	return ""
}

func (m *SubmitCaptureRequest) GetNotification() string {
	if m != nil {
		return m.Notification
	}
	return ""
}

func (m *SubmitCaptureRequest) GetUrls() []string {
	if m != nil {
		return m.Urls
	}
	return nil
}

func (m *SubmitCaptureRequest) GetMeta() []*Metadata {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *SubmitCaptureRequest) GetSkiprecent() int64 {
	if m != nil {
		return m.Skiprecent
	}
	return 0
}

type SubmitCaptureResult struct {
	Assets               string   `protobuf:"bytes,1,opt,name=assets,proto3" json:"assets,omitempty"`
	Skipped              bool     `protobuf:"varint,2,opt,name=skipped,proto3" json:"skipped,omitempty"`
	Id                   string   `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubmitCaptureResult) Reset()         { *m = SubmitCaptureResult{} }
func (m *SubmitCaptureResult) String() string { return proto.CompactTextString(m) }
func (*SubmitCaptureResult) ProtoMessage()    {}
func (*SubmitCaptureResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_ngapi_e0b646946dae5de6, []int{29}
}
func (m *SubmitCaptureResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubmitCaptureResult.Unmarshal(m, b)
}
func (m *SubmitCaptureResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubmitCaptureResult.Marshal(b, m, deterministic)
}
func (dst *SubmitCaptureResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubmitCaptureResult.Merge(dst, src)
}
func (m *SubmitCaptureResult) XXX_Size() int {
	return xxx_messageInfo_SubmitCaptureResult.Size(m)
}
func (m *SubmitCaptureResult) XXX_DiscardUnknown() {
	xxx_messageInfo_SubmitCaptureResult.DiscardUnknown(m)
}

var xxx_messageInfo_SubmitCaptureResult proto.InternalMessageInfo

func (m *SubmitCaptureResult) GetAssets() string {
	if m != nil {
		return m.Assets
	}
	return ""
}

func (m *SubmitCaptureResult) GetSkipped() bool {
	if m != nil {
		return m.Skipped
	}
	return false
}

func (m *SubmitCaptureResult) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type RootLogSearchRequest struct {
	Dataset              string   `protobuf:"bytes,1,opt,name=dataset,proto3" json:"dataset,omitempty"`
	Query                string   `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	Limit                int64    `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Resume               string   `protobuf:"bytes,4,opt,name=resume,proto3" json:"resume,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RootLogSearchRequest) Reset()         { *m = RootLogSearchRequest{} }
func (m *RootLogSearchRequest) String() string { return proto.CompactTextString(m) }
func (*RootLogSearchRequest) ProtoMessage()    {}
func (*RootLogSearchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ngapi_e0b646946dae5de6, []int{30}
}
func (m *RootLogSearchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RootLogSearchRequest.Unmarshal(m, b)
}
func (m *RootLogSearchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RootLogSearchRequest.Marshal(b, m, deterministic)
}
func (dst *RootLogSearchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RootLogSearchRequest.Merge(dst, src)
}
func (m *RootLogSearchRequest) XXX_Size() int {
	return xxx_messageInfo_RootLogSearchRequest.Size(m)
}
func (m *RootLogSearchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RootLogSearchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RootLogSearchRequest proto.InternalMessageInfo

func (m *RootLogSearchRequest) GetDataset() string {
	if m != nil {
		return m.Dataset
	}
	return ""
}

func (m *RootLogSearchRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *RootLogSearchRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *RootLogSearchRequest) GetResume() string {
	if m != nil {
		return m.Resume
	}
	return ""
}

type RootLogSearchResult struct {
	Root                 string      `protobuf:"bytes,1,opt,name=root,proto3" json:"root,omitempty"`
	Resume               string      `protobuf:"bytes,2,opt,name=resume,proto3" json:"resume,omitempty"`
	Capsummary           *CapSummary `protobuf:"bytes,3,opt,name=capsummary,proto3" json:"capsummary,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *RootLogSearchResult) Reset()         { *m = RootLogSearchResult{} }
func (m *RootLogSearchResult) String() string { return proto.CompactTextString(m) }
func (*RootLogSearchResult) ProtoMessage()    {}
func (*RootLogSearchResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_ngapi_e0b646946dae5de6, []int{31}
}
func (m *RootLogSearchResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RootLogSearchResult.Unmarshal(m, b)
}
func (m *RootLogSearchResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RootLogSearchResult.Marshal(b, m, deterministic)
}
func (dst *RootLogSearchResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RootLogSearchResult.Merge(dst, src)
}
func (m *RootLogSearchResult) XXX_Size() int {
	return xxx_messageInfo_RootLogSearchResult.Size(m)
}
func (m *RootLogSearchResult) XXX_DiscardUnknown() {
	xxx_messageInfo_RootLogSearchResult.DiscardUnknown(m)
}

var xxx_messageInfo_RootLogSearchResult proto.InternalMessageInfo

func (m *RootLogSearchResult) GetRoot() string {
	if m != nil {
		return m.Root
	}
	return ""
}

func (m *RootLogSearchResult) GetResume() string {
	if m != nil {
		return m.Resume
	}
	return ""
}

func (m *RootLogSearchResult) GetCapsummary() *CapSummary {
	if m != nil {
		return m.Capsummary
	}
	return nil
}

type RootsForSatelliteRequest struct {
	Dataset              string   `protobuf:"bytes,1,opt,name=dataset,proto3" json:"dataset,omitempty"`
	Query                string   `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	Limit                int64    `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Resume               string   `protobuf:"bytes,4,opt,name=resume,proto3" json:"resume,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RootsForSatelliteRequest) Reset()         { *m = RootsForSatelliteRequest{} }
func (m *RootsForSatelliteRequest) String() string { return proto.CompactTextString(m) }
func (*RootsForSatelliteRequest) ProtoMessage()    {}
func (*RootsForSatelliteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ngapi_e0b646946dae5de6, []int{32}
}
func (m *RootsForSatelliteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RootsForSatelliteRequest.Unmarshal(m, b)
}
func (m *RootsForSatelliteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RootsForSatelliteRequest.Marshal(b, m, deterministic)
}
func (dst *RootsForSatelliteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RootsForSatelliteRequest.Merge(dst, src)
}
func (m *RootsForSatelliteRequest) XXX_Size() int {
	return xxx_messageInfo_RootsForSatelliteRequest.Size(m)
}
func (m *RootsForSatelliteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RootsForSatelliteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RootsForSatelliteRequest proto.InternalMessageInfo

func (m *RootsForSatelliteRequest) GetDataset() string {
	if m != nil {
		return m.Dataset
	}
	return ""
}

func (m *RootsForSatelliteRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *RootsForSatelliteRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *RootsForSatelliteRequest) GetResume() string {
	if m != nil {
		return m.Resume
	}
	return ""
}

type RootsForSatelliteResult struct {
	Root                 string      `protobuf:"bytes,1,opt,name=root,proto3" json:"root,omitempty"`
	Satellite            string      `protobuf:"bytes,2,opt,name=satellite,proto3" json:"satellite,omitempty"`
	Capsummary           *CapSummary `protobuf:"bytes,3,opt,name=capsummary,proto3" json:"capsummary,omitempty"`
	Associations         []string    `protobuf:"bytes,4,rep,name=associations,proto3" json:"associations,omitempty"`
	Resume               string      `protobuf:"bytes,5,opt,name=resume,proto3" json:"resume,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *RootsForSatelliteResult) Reset()         { *m = RootsForSatelliteResult{} }
func (m *RootsForSatelliteResult) String() string { return proto.CompactTextString(m) }
func (*RootsForSatelliteResult) ProtoMessage()    {}
func (*RootsForSatelliteResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_ngapi_e0b646946dae5de6, []int{33}
}
func (m *RootsForSatelliteResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RootsForSatelliteResult.Unmarshal(m, b)
}
func (m *RootsForSatelliteResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RootsForSatelliteResult.Marshal(b, m, deterministic)
}
func (dst *RootsForSatelliteResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RootsForSatelliteResult.Merge(dst, src)
}
func (m *RootsForSatelliteResult) XXX_Size() int {
	return xxx_messageInfo_RootsForSatelliteResult.Size(m)
}
func (m *RootsForSatelliteResult) XXX_DiscardUnknown() {
	xxx_messageInfo_RootsForSatelliteResult.DiscardUnknown(m)
}

var xxx_messageInfo_RootsForSatelliteResult proto.InternalMessageInfo

func (m *RootsForSatelliteResult) GetRoot() string {
	if m != nil {
		return m.Root
	}
	return ""
}

func (m *RootsForSatelliteResult) GetSatellite() string {
	if m != nil {
		return m.Satellite
	}
	return ""
}

func (m *RootsForSatelliteResult) GetCapsummary() *CapSummary {
	if m != nil {
		return m.Capsummary
	}
	return nil
}

func (m *RootsForSatelliteResult) GetAssociations() []string {
	if m != nil {
		return m.Associations
	}
	return nil
}

func (m *RootsForSatelliteResult) GetResume() string {
	if m != nil {
		return m.Resume
	}
	return ""
}

type SatelliteLogSearchRequest struct {
	Dataset              string   `protobuf:"bytes,1,opt,name=dataset,proto3" json:"dataset,omitempty"`
	Query                string   `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	Limit                int64    `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Resume               string   `protobuf:"bytes,4,opt,name=resume,proto3" json:"resume,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SatelliteLogSearchRequest) Reset()         { *m = SatelliteLogSearchRequest{} }
func (m *SatelliteLogSearchRequest) String() string { return proto.CompactTextString(m) }
func (*SatelliteLogSearchRequest) ProtoMessage()    {}
func (*SatelliteLogSearchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ngapi_e0b646946dae5de6, []int{34}
}
func (m *SatelliteLogSearchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SatelliteLogSearchRequest.Unmarshal(m, b)
}
func (m *SatelliteLogSearchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SatelliteLogSearchRequest.Marshal(b, m, deterministic)
}
func (dst *SatelliteLogSearchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SatelliteLogSearchRequest.Merge(dst, src)
}
func (m *SatelliteLogSearchRequest) XXX_Size() int {
	return xxx_messageInfo_SatelliteLogSearchRequest.Size(m)
}
func (m *SatelliteLogSearchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SatelliteLogSearchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SatelliteLogSearchRequest proto.InternalMessageInfo

func (m *SatelliteLogSearchRequest) GetDataset() string {
	if m != nil {
		return m.Dataset
	}
	return ""
}

func (m *SatelliteLogSearchRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *SatelliteLogSearchRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *SatelliteLogSearchRequest) GetResume() string {
	if m != nil {
		return m.Resume
	}
	return ""
}

type SatelliteLogSearchResult struct {
	Satellite            string      `protobuf:"bytes,1,opt,name=satellite,proto3" json:"satellite,omitempty"`
	Resume               string      `protobuf:"bytes,2,opt,name=resume,proto3" json:"resume,omitempty"`
	Capsummary           *CapSummary `protobuf:"bytes,3,opt,name=capsummary,proto3" json:"capsummary,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *SatelliteLogSearchResult) Reset()         { *m = SatelliteLogSearchResult{} }
func (m *SatelliteLogSearchResult) String() string { return proto.CompactTextString(m) }
func (*SatelliteLogSearchResult) ProtoMessage()    {}
func (*SatelliteLogSearchResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_ngapi_e0b646946dae5de6, []int{35}
}
func (m *SatelliteLogSearchResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SatelliteLogSearchResult.Unmarshal(m, b)
}
func (m *SatelliteLogSearchResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SatelliteLogSearchResult.Marshal(b, m, deterministic)
}
func (dst *SatelliteLogSearchResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SatelliteLogSearchResult.Merge(dst, src)
}
func (m *SatelliteLogSearchResult) XXX_Size() int {
	return xxx_messageInfo_SatelliteLogSearchResult.Size(m)
}
func (m *SatelliteLogSearchResult) XXX_DiscardUnknown() {
	xxx_messageInfo_SatelliteLogSearchResult.DiscardUnknown(m)
}

var xxx_messageInfo_SatelliteLogSearchResult proto.InternalMessageInfo

func (m *SatelliteLogSearchResult) GetSatellite() string {
	if m != nil {
		return m.Satellite
	}
	return ""
}

func (m *SatelliteLogSearchResult) GetResume() string {
	if m != nil {
		return m.Resume
	}
	return ""
}

func (m *SatelliteLogSearchResult) GetCapsummary() *CapSummary {
	if m != nil {
		return m.Capsummary
	}
	return nil
}

type SatellitesForRootRequest struct {
	Dataset              string   `protobuf:"bytes,1,opt,name=dataset,proto3" json:"dataset,omitempty"`
	Query                string   `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	Limit                int64    `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Resume               string   `protobuf:"bytes,4,opt,name=resume,proto3" json:"resume,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SatellitesForRootRequest) Reset()         { *m = SatellitesForRootRequest{} }
func (m *SatellitesForRootRequest) String() string { return proto.CompactTextString(m) }
func (*SatellitesForRootRequest) ProtoMessage()    {}
func (*SatellitesForRootRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ngapi_e0b646946dae5de6, []int{36}
}
func (m *SatellitesForRootRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SatellitesForRootRequest.Unmarshal(m, b)
}
func (m *SatellitesForRootRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SatellitesForRootRequest.Marshal(b, m, deterministic)
}
func (dst *SatellitesForRootRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SatellitesForRootRequest.Merge(dst, src)
}
func (m *SatellitesForRootRequest) XXX_Size() int {
	return xxx_messageInfo_SatellitesForRootRequest.Size(m)
}
func (m *SatellitesForRootRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SatellitesForRootRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SatellitesForRootRequest proto.InternalMessageInfo

func (m *SatellitesForRootRequest) GetDataset() string {
	if m != nil {
		return m.Dataset
	}
	return ""
}

func (m *SatellitesForRootRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *SatellitesForRootRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *SatellitesForRootRequest) GetResume() string {
	if m != nil {
		return m.Resume
	}
	return ""
}

type SatellitesForRootResult struct {
	Root                 string      `protobuf:"bytes,1,opt,name=root,proto3" json:"root,omitempty"`
	Satellite            string      `protobuf:"bytes,2,opt,name=satellite,proto3" json:"satellite,omitempty"`
	Capsummary           *CapSummary `protobuf:"bytes,3,opt,name=capsummary,proto3" json:"capsummary,omitempty"`
	Associations         []string    `protobuf:"bytes,4,rep,name=associations,proto3" json:"associations,omitempty"`
	Resume               string      `protobuf:"bytes,5,opt,name=resume,proto3" json:"resume,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *SatellitesForRootResult) Reset()         { *m = SatellitesForRootResult{} }
func (m *SatellitesForRootResult) String() string { return proto.CompactTextString(m) }
func (*SatellitesForRootResult) ProtoMessage()    {}
func (*SatellitesForRootResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_ngapi_e0b646946dae5de6, []int{37}
}
func (m *SatellitesForRootResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SatellitesForRootResult.Unmarshal(m, b)
}
func (m *SatellitesForRootResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SatellitesForRootResult.Marshal(b, m, deterministic)
}
func (dst *SatellitesForRootResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SatellitesForRootResult.Merge(dst, src)
}
func (m *SatellitesForRootResult) XXX_Size() int {
	return xxx_messageInfo_SatellitesForRootResult.Size(m)
}
func (m *SatellitesForRootResult) XXX_DiscardUnknown() {
	xxx_messageInfo_SatellitesForRootResult.DiscardUnknown(m)
}

var xxx_messageInfo_SatellitesForRootResult proto.InternalMessageInfo

func (m *SatellitesForRootResult) GetRoot() string {
	if m != nil {
		return m.Root
	}
	return ""
}

func (m *SatellitesForRootResult) GetSatellite() string {
	if m != nil {
		return m.Satellite
	}
	return ""
}

func (m *SatellitesForRootResult) GetCapsummary() *CapSummary {
	if m != nil {
		return m.Capsummary
	}
	return nil
}

func (m *SatellitesForRootResult) GetAssociations() []string {
	if m != nil {
		return m.Associations
	}
	return nil
}

func (m *SatellitesForRootResult) GetResume() string {
	if m != nil {
		return m.Resume
	}
	return ""
}

type URLLogSearchRequest struct {
	Dataset              string   `protobuf:"bytes,1,opt,name=dataset,proto3" json:"dataset,omitempty"`
	Query                string   `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	Limit                int64    `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Resume               string   `protobuf:"bytes,4,opt,name=resume,proto3" json:"resume,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *URLLogSearchRequest) Reset()         { *m = URLLogSearchRequest{} }
func (m *URLLogSearchRequest) String() string { return proto.CompactTextString(m) }
func (*URLLogSearchRequest) ProtoMessage()    {}
func (*URLLogSearchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ngapi_e0b646946dae5de6, []int{38}
}
func (m *URLLogSearchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_URLLogSearchRequest.Unmarshal(m, b)
}
func (m *URLLogSearchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_URLLogSearchRequest.Marshal(b, m, deterministic)
}
func (dst *URLLogSearchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_URLLogSearchRequest.Merge(dst, src)
}
func (m *URLLogSearchRequest) XXX_Size() int {
	return xxx_messageInfo_URLLogSearchRequest.Size(m)
}
func (m *URLLogSearchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_URLLogSearchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_URLLogSearchRequest proto.InternalMessageInfo

func (m *URLLogSearchRequest) GetDataset() string {
	if m != nil {
		return m.Dataset
	}
	return ""
}

func (m *URLLogSearchRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *URLLogSearchRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *URLLogSearchRequest) GetResume() string {
	if m != nil {
		return m.Resume
	}
	return ""
}

type URLLogSearchResult struct {
	Url                  string      `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Resume               string      `protobuf:"bytes,2,opt,name=resume,proto3" json:"resume,omitempty"`
	Capsummary           *CapSummary `protobuf:"bytes,3,opt,name=capsummary,proto3" json:"capsummary,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *URLLogSearchResult) Reset()         { *m = URLLogSearchResult{} }
func (m *URLLogSearchResult) String() string { return proto.CompactTextString(m) }
func (*URLLogSearchResult) ProtoMessage()    {}
func (*URLLogSearchResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_ngapi_e0b646946dae5de6, []int{39}
}
func (m *URLLogSearchResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_URLLogSearchResult.Unmarshal(m, b)
}
func (m *URLLogSearchResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_URLLogSearchResult.Marshal(b, m, deterministic)
}
func (dst *URLLogSearchResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_URLLogSearchResult.Merge(dst, src)
}
func (m *URLLogSearchResult) XXX_Size() int {
	return xxx_messageInfo_URLLogSearchResult.Size(m)
}
func (m *URLLogSearchResult) XXX_DiscardUnknown() {
	xxx_messageInfo_URLLogSearchResult.DiscardUnknown(m)
}

var xxx_messageInfo_URLLogSearchResult proto.InternalMessageInfo

func (m *URLLogSearchResult) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *URLLogSearchResult) GetResume() string {
	if m != nil {
		return m.Resume
	}
	return ""
}

func (m *URLLogSearchResult) GetCapsummary() *CapSummary {
	if m != nil {
		return m.Capsummary
	}
	return nil
}

func init() {
	proto.RegisterType((*DatasetsRequest)(nil), "DatasetsRequest")
	proto.RegisterType((*Dataset)(nil), "Dataset")
	proto.RegisterType((*CapSummary)(nil), "CapSummary")
	proto.RegisterType((*CapSummary_Plan)(nil), "CapSummary.Plan")
	proto.RegisterType((*CapSummary_Root)(nil), "CapSummary.Root")
	proto.RegisterType((*CapSummary_Stats)(nil), "CapSummary.Stats")
	proto.RegisterType((*Metadata)(nil), "Metadata")
	proto.RegisterType((*CaptureInfoRequest)(nil), "CaptureInfoRequest")
	proto.RegisterType((*CaptureInfoResult)(nil), "CaptureInfoResult")
	proto.RegisterType((*CaptureLogRequest)(nil), "CaptureLogRequest")
	proto.RegisterType((*CaptureLogResult)(nil), "CaptureLogResult")
	proto.RegisterType((*DomainHistoryRequest)(nil), "DomainHistoryRequest")
	proto.RegisterType((*DomainHistoryResult)(nil), "DomainHistoryResult")
	proto.RegisterType((*DomainSearchRequest)(nil), "DomainSearchRequest")
	proto.RegisterType((*DomainSearchResult)(nil), "DomainSearchResult")
	proto.RegisterType((*DomainsForIPRequest)(nil), "DomainsForIPRequest")
	proto.RegisterType((*DomainsForIPResult)(nil), "DomainsForIPResult")
	proto.RegisterType((*IPHistoryRequest)(nil), "IPHistoryRequest")
	proto.RegisterType((*IPHistoryResult)(nil), "IPHistoryResult")
	proto.RegisterType((*IPLogSearchRequest)(nil), "IPLogSearchRequest")
	proto.RegisterType((*IPLogSearchResult)(nil), "IPLogSearchResult")
	proto.RegisterType((*IPSearchResult)(nil), "IPSearchResult")
	proto.RegisterType((*IPSearchRequest)(nil), "IPSearchRequest")
	proto.RegisterType((*IPsForDomainRequest)(nil), "IPsForDomainRequest")
	proto.RegisterType((*IPsForDomainResult)(nil), "IPsForDomainResult")
	proto.RegisterType((*MetaForCaptureRequest)(nil), "MetaForCaptureRequest")
	proto.RegisterType((*MetaForCaptureResult)(nil), "MetaForCaptureResult")
	proto.RegisterType((*MetaSearchRequest)(nil), "MetaSearchRequest")
	proto.RegisterType((*MetaSearchResult)(nil), "MetaSearchResult")
	proto.RegisterType((*TempCaptureRequest)(nil), "TempCaptureRequest")
	proto.RegisterType((*TempCaptureResult)(nil), "TempCaptureResult")
	proto.RegisterType((*SubmitCaptureRequest)(nil), "SubmitCaptureRequest")
	proto.RegisterType((*SubmitCaptureResult)(nil), "SubmitCaptureResult")
	proto.RegisterType((*RootLogSearchRequest)(nil), "RootLogSearchRequest")
	proto.RegisterType((*RootLogSearchResult)(nil), "RootLogSearchResult")
	proto.RegisterType((*RootsForSatelliteRequest)(nil), "RootsForSatelliteRequest")
	proto.RegisterType((*RootsForSatelliteResult)(nil), "RootsForSatelliteResult")
	proto.RegisterType((*SatelliteLogSearchRequest)(nil), "SatelliteLogSearchRequest")
	proto.RegisterType((*SatelliteLogSearchResult)(nil), "SatelliteLogSearchResult")
	proto.RegisterType((*SatellitesForRootRequest)(nil), "SatellitesForRootRequest")
	proto.RegisterType((*SatellitesForRootResult)(nil), "SatellitesForRootResult")
	proto.RegisterType((*URLLogSearchRequest)(nil), "URLLogSearchRequest")
	proto.RegisterType((*URLLogSearchResult)(nil), "URLLogSearchResult")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// NetographClient is the client API for Netograph service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NetographClient interface {
	// Request a temporary capture. Temporary captures are not stored in a
	// dataset, and the capture assets will be available for download for 24
	// hours before being deleted.
	TempCapture(ctx context.Context, in *TempCaptureRequest, opts ...grpc.CallOption) (*TempCaptureResult, error)
	// List all datasets to which the authorizing account has access. This
	// includes public datasets, which will be marked readonly.
	Datasets(ctx context.Context, in *DatasetsRequest, opts ...grpc.CallOption) (Netograph_DatasetsClient, error)
	// Submit a capture request to a dataset.
	SubmitCapture(ctx context.Context, in *SubmitCaptureRequest, opts ...grpc.CallOption) (*SubmitCaptureResult, error)
	// Retrieve info for a specified capture by ID within a dataset.
	CaptureInfo(ctx context.Context, in *CaptureInfoRequest, opts ...grpc.CallOption) (*CaptureInfoResult, error)
	// Retrieve the capture log for a dataset, in reverse chronological order.
	CaptureLog(ctx context.Context, in *CaptureLogRequest, opts ...grpc.CallOption) (Netograph_CaptureLogClient, error)
	// Retrieve the capture history for a specified domain in a dataset. The
	// length of this history is capped at ~100.
	DomainHistory(ctx context.Context, in *DomainHistoryRequest, opts ...grpc.CallOption) (Netograph_DomainHistoryClient, error)
	// Retrieve the capture log for a dataset, in reverse chronological order.
	DomainSearch(ctx context.Context, in *DomainSearchRequest, opts ...grpc.CallOption) (Netograph_DomainSearchClient, error)
	// Find all domains in the dataset associated with a given IP address.
	DomainsForIP(ctx context.Context, in *DomainsForIPRequest, opts ...grpc.CallOption) (Netograph_DomainsForIPClient, error)
	// Retrieve the capture history for a specified IP in a dataset. The
	// length of this history is capped at ~100.
	IPHistory(ctx context.Context, in *IPHistoryRequest, opts ...grpc.CallOption) (Netograph_IPHistoryClient, error)
	// Search the dataset log for captures that contain a given IP.
	IPLogSearch(ctx context.Context, in *IPLogSearchRequest, opts ...grpc.CallOption) (Netograph_IPLogSearchClient, error)
	// Find all IPs in the dataset that match an address and integer netmask.
	IPSearch(ctx context.Context, in *IPSearchRequest, opts ...grpc.CallOption) (Netograph_IPSearchClient, error)
	// Find all IPs in a dataset associated with a given domain.
	IPsForDomain(ctx context.Context, in *IPsForDomainRequest, opts ...grpc.CallOption) (Netograph_IPsForDomainClient, error)
	// Get metadata associated with a specified capture within a dataset.
	MetaForCapture(ctx context.Context, in *MetaForCaptureRequest, opts ...grpc.CallOption) (Netograph_MetaForCaptureClient, error)
	// Search the dataset log for captures matching a metadata query.
	MetaSearch(ctx context.Context, in *MetaSearchRequest, opts ...grpc.CallOption) (Netograph_MetaSearchClient, error)
	// Search the dataset log for captures where any root domain matches a given query.
	RootLogSearch(ctx context.Context, in *RootLogSearchRequest, opts ...grpc.CallOption) (Netograph_RootLogSearchClient, error)
	// Find all roots in a dataset that are associated with a given satellite query.
	RootsForSatellite(ctx context.Context, in *RootsForSatelliteRequest, opts ...grpc.CallOption) (Netograph_RootsForSatelliteClient, error)
	// Search the dataset log for captures where any satellite domain matches a given query.
	SatelliteLogSearch(ctx context.Context, in *SatelliteLogSearchRequest, opts ...grpc.CallOption) (Netograph_SatelliteLogSearchClient, error)
	// Find all satellites in the dataset that are associated with a given root query.
	SatellitesForRoot(ctx context.Context, in *SatellitesForRootRequest, opts ...grpc.CallOption) (Netograph_SatellitesForRootClient, error)
	// Search the dataset log for captures where any root URL matches a given URL query.
	URLLogSearch(ctx context.Context, in *URLLogSearchRequest, opts ...grpc.CallOption) (Netograph_URLLogSearchClient, error)
}

type netographClient struct {
	cc *grpc.ClientConn
}

func NewNetographClient(cc *grpc.ClientConn) NetographClient {
	return &netographClient{cc}
}

func (c *netographClient) TempCapture(ctx context.Context, in *TempCaptureRequest, opts ...grpc.CallOption) (*TempCaptureResult, error) {
	out := new(TempCaptureResult)
	err := c.cc.Invoke(ctx, "/Netograph/TempCapture", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *netographClient) Datasets(ctx context.Context, in *DatasetsRequest, opts ...grpc.CallOption) (Netograph_DatasetsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Netograph_serviceDesc.Streams[0], "/Netograph/Datasets", opts...)
	if err != nil {
		return nil, err
	}
	x := &netographDatasetsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Netograph_DatasetsClient interface {
	Recv() (*Dataset, error)
	grpc.ClientStream
}

type netographDatasetsClient struct {
	grpc.ClientStream
}

func (x *netographDatasetsClient) Recv() (*Dataset, error) {
	m := new(Dataset)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *netographClient) SubmitCapture(ctx context.Context, in *SubmitCaptureRequest, opts ...grpc.CallOption) (*SubmitCaptureResult, error) {
	out := new(SubmitCaptureResult)
	err := c.cc.Invoke(ctx, "/Netograph/SubmitCapture", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *netographClient) CaptureInfo(ctx context.Context, in *CaptureInfoRequest, opts ...grpc.CallOption) (*CaptureInfoResult, error) {
	out := new(CaptureInfoResult)
	err := c.cc.Invoke(ctx, "/Netograph/CaptureInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *netographClient) CaptureLog(ctx context.Context, in *CaptureLogRequest, opts ...grpc.CallOption) (Netograph_CaptureLogClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Netograph_serviceDesc.Streams[1], "/Netograph/CaptureLog", opts...)
	if err != nil {
		return nil, err
	}
	x := &netographCaptureLogClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Netograph_CaptureLogClient interface {
	Recv() (*CaptureLogResult, error)
	grpc.ClientStream
}

type netographCaptureLogClient struct {
	grpc.ClientStream
}

func (x *netographCaptureLogClient) Recv() (*CaptureLogResult, error) {
	m := new(CaptureLogResult)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *netographClient) DomainHistory(ctx context.Context, in *DomainHistoryRequest, opts ...grpc.CallOption) (Netograph_DomainHistoryClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Netograph_serviceDesc.Streams[2], "/Netograph/DomainHistory", opts...)
	if err != nil {
		return nil, err
	}
	x := &netographDomainHistoryClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Netograph_DomainHistoryClient interface {
	Recv() (*DomainHistoryResult, error)
	grpc.ClientStream
}

type netographDomainHistoryClient struct {
	grpc.ClientStream
}

func (x *netographDomainHistoryClient) Recv() (*DomainHistoryResult, error) {
	m := new(DomainHistoryResult)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *netographClient) DomainSearch(ctx context.Context, in *DomainSearchRequest, opts ...grpc.CallOption) (Netograph_DomainSearchClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Netograph_serviceDesc.Streams[3], "/Netograph/DomainSearch", opts...)
	if err != nil {
		return nil, err
	}
	x := &netographDomainSearchClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Netograph_DomainSearchClient interface {
	Recv() (*DomainSearchResult, error)
	grpc.ClientStream
}

type netographDomainSearchClient struct {
	grpc.ClientStream
}

func (x *netographDomainSearchClient) Recv() (*DomainSearchResult, error) {
	m := new(DomainSearchResult)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *netographClient) DomainsForIP(ctx context.Context, in *DomainsForIPRequest, opts ...grpc.CallOption) (Netograph_DomainsForIPClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Netograph_serviceDesc.Streams[4], "/Netograph/DomainsForIP", opts...)
	if err != nil {
		return nil, err
	}
	x := &netographDomainsForIPClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Netograph_DomainsForIPClient interface {
	Recv() (*DomainsForIPResult, error)
	grpc.ClientStream
}

type netographDomainsForIPClient struct {
	grpc.ClientStream
}

func (x *netographDomainsForIPClient) Recv() (*DomainsForIPResult, error) {
	m := new(DomainsForIPResult)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *netographClient) IPHistory(ctx context.Context, in *IPHistoryRequest, opts ...grpc.CallOption) (Netograph_IPHistoryClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Netograph_serviceDesc.Streams[5], "/Netograph/IPHistory", opts...)
	if err != nil {
		return nil, err
	}
	x := &netographIPHistoryClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Netograph_IPHistoryClient interface {
	Recv() (*IPHistoryResult, error)
	grpc.ClientStream
}

type netographIPHistoryClient struct {
	grpc.ClientStream
}

func (x *netographIPHistoryClient) Recv() (*IPHistoryResult, error) {
	m := new(IPHistoryResult)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *netographClient) IPLogSearch(ctx context.Context, in *IPLogSearchRequest, opts ...grpc.CallOption) (Netograph_IPLogSearchClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Netograph_serviceDesc.Streams[6], "/Netograph/IPLogSearch", opts...)
	if err != nil {
		return nil, err
	}
	x := &netographIPLogSearchClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Netograph_IPLogSearchClient interface {
	Recv() (*IPLogSearchResult, error)
	grpc.ClientStream
}

type netographIPLogSearchClient struct {
	grpc.ClientStream
}

func (x *netographIPLogSearchClient) Recv() (*IPLogSearchResult, error) {
	m := new(IPLogSearchResult)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *netographClient) IPSearch(ctx context.Context, in *IPSearchRequest, opts ...grpc.CallOption) (Netograph_IPSearchClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Netograph_serviceDesc.Streams[7], "/Netograph/IPSearch", opts...)
	if err != nil {
		return nil, err
	}
	x := &netographIPSearchClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Netograph_IPSearchClient interface {
	Recv() (*IPSearchResult, error)
	grpc.ClientStream
}

type netographIPSearchClient struct {
	grpc.ClientStream
}

func (x *netographIPSearchClient) Recv() (*IPSearchResult, error) {
	m := new(IPSearchResult)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *netographClient) IPsForDomain(ctx context.Context, in *IPsForDomainRequest, opts ...grpc.CallOption) (Netograph_IPsForDomainClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Netograph_serviceDesc.Streams[8], "/Netograph/IPsForDomain", opts...)
	if err != nil {
		return nil, err
	}
	x := &netographIPsForDomainClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Netograph_IPsForDomainClient interface {
	Recv() (*IPsForDomainResult, error)
	grpc.ClientStream
}

type netographIPsForDomainClient struct {
	grpc.ClientStream
}

func (x *netographIPsForDomainClient) Recv() (*IPsForDomainResult, error) {
	m := new(IPsForDomainResult)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *netographClient) MetaForCapture(ctx context.Context, in *MetaForCaptureRequest, opts ...grpc.CallOption) (Netograph_MetaForCaptureClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Netograph_serviceDesc.Streams[9], "/Netograph/MetaForCapture", opts...)
	if err != nil {
		return nil, err
	}
	x := &netographMetaForCaptureClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Netograph_MetaForCaptureClient interface {
	Recv() (*MetaForCaptureResult, error)
	grpc.ClientStream
}

type netographMetaForCaptureClient struct {
	grpc.ClientStream
}

func (x *netographMetaForCaptureClient) Recv() (*MetaForCaptureResult, error) {
	m := new(MetaForCaptureResult)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *netographClient) MetaSearch(ctx context.Context, in *MetaSearchRequest, opts ...grpc.CallOption) (Netograph_MetaSearchClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Netograph_serviceDesc.Streams[10], "/Netograph/MetaSearch", opts...)
	if err != nil {
		return nil, err
	}
	x := &netographMetaSearchClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Netograph_MetaSearchClient interface {
	Recv() (*MetaSearchResult, error)
	grpc.ClientStream
}

type netographMetaSearchClient struct {
	grpc.ClientStream
}

func (x *netographMetaSearchClient) Recv() (*MetaSearchResult, error) {
	m := new(MetaSearchResult)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *netographClient) RootLogSearch(ctx context.Context, in *RootLogSearchRequest, opts ...grpc.CallOption) (Netograph_RootLogSearchClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Netograph_serviceDesc.Streams[11], "/Netograph/RootLogSearch", opts...)
	if err != nil {
		return nil, err
	}
	x := &netographRootLogSearchClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Netograph_RootLogSearchClient interface {
	Recv() (*RootLogSearchResult, error)
	grpc.ClientStream
}

type netographRootLogSearchClient struct {
	grpc.ClientStream
}

func (x *netographRootLogSearchClient) Recv() (*RootLogSearchResult, error) {
	m := new(RootLogSearchResult)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *netographClient) RootsForSatellite(ctx context.Context, in *RootsForSatelliteRequest, opts ...grpc.CallOption) (Netograph_RootsForSatelliteClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Netograph_serviceDesc.Streams[12], "/Netograph/RootsForSatellite", opts...)
	if err != nil {
		return nil, err
	}
	x := &netographRootsForSatelliteClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Netograph_RootsForSatelliteClient interface {
	Recv() (*RootsForSatelliteResult, error)
	grpc.ClientStream
}

type netographRootsForSatelliteClient struct {
	grpc.ClientStream
}

func (x *netographRootsForSatelliteClient) Recv() (*RootsForSatelliteResult, error) {
	m := new(RootsForSatelliteResult)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *netographClient) SatelliteLogSearch(ctx context.Context, in *SatelliteLogSearchRequest, opts ...grpc.CallOption) (Netograph_SatelliteLogSearchClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Netograph_serviceDesc.Streams[13], "/Netograph/SatelliteLogSearch", opts...)
	if err != nil {
		return nil, err
	}
	x := &netographSatelliteLogSearchClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Netograph_SatelliteLogSearchClient interface {
	Recv() (*SatelliteLogSearchResult, error)
	grpc.ClientStream
}

type netographSatelliteLogSearchClient struct {
	grpc.ClientStream
}

func (x *netographSatelliteLogSearchClient) Recv() (*SatelliteLogSearchResult, error) {
	m := new(SatelliteLogSearchResult)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *netographClient) SatellitesForRoot(ctx context.Context, in *SatellitesForRootRequest, opts ...grpc.CallOption) (Netograph_SatellitesForRootClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Netograph_serviceDesc.Streams[14], "/Netograph/SatellitesForRoot", opts...)
	if err != nil {
		return nil, err
	}
	x := &netographSatellitesForRootClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Netograph_SatellitesForRootClient interface {
	Recv() (*SatellitesForRootResult, error)
	grpc.ClientStream
}

type netographSatellitesForRootClient struct {
	grpc.ClientStream
}

func (x *netographSatellitesForRootClient) Recv() (*SatellitesForRootResult, error) {
	m := new(SatellitesForRootResult)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *netographClient) URLLogSearch(ctx context.Context, in *URLLogSearchRequest, opts ...grpc.CallOption) (Netograph_URLLogSearchClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Netograph_serviceDesc.Streams[15], "/Netograph/URLLogSearch", opts...)
	if err != nil {
		return nil, err
	}
	x := &netographURLLogSearchClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Netograph_URLLogSearchClient interface {
	Recv() (*URLLogSearchResult, error)
	grpc.ClientStream
}

type netographURLLogSearchClient struct {
	grpc.ClientStream
}

func (x *netographURLLogSearchClient) Recv() (*URLLogSearchResult, error) {
	m := new(URLLogSearchResult)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NetographServer is the server API for Netograph service.
type NetographServer interface {
	// Request a temporary capture. Temporary captures are not stored in a
	// dataset, and the capture assets will be available for download for 24
	// hours before being deleted.
	TempCapture(context.Context, *TempCaptureRequest) (*TempCaptureResult, error)
	// List all datasets to which the authorizing account has access. This
	// includes public datasets, which will be marked readonly.
	Datasets(*DatasetsRequest, Netograph_DatasetsServer) error
	// Submit a capture request to a dataset.
	SubmitCapture(context.Context, *SubmitCaptureRequest) (*SubmitCaptureResult, error)
	// Retrieve info for a specified capture by ID within a dataset.
	CaptureInfo(context.Context, *CaptureInfoRequest) (*CaptureInfoResult, error)
	// Retrieve the capture log for a dataset, in reverse chronological order.
	CaptureLog(*CaptureLogRequest, Netograph_CaptureLogServer) error
	// Retrieve the capture history for a specified domain in a dataset. The
	// length of this history is capped at ~100.
	DomainHistory(*DomainHistoryRequest, Netograph_DomainHistoryServer) error
	// Retrieve the capture log for a dataset, in reverse chronological order.
	DomainSearch(*DomainSearchRequest, Netograph_DomainSearchServer) error
	// Find all domains in the dataset associated with a given IP address.
	DomainsForIP(*DomainsForIPRequest, Netograph_DomainsForIPServer) error
	// Retrieve the capture history for a specified IP in a dataset. The
	// length of this history is capped at ~100.
	IPHistory(*IPHistoryRequest, Netograph_IPHistoryServer) error
	// Search the dataset log for captures that contain a given IP.
	IPLogSearch(*IPLogSearchRequest, Netograph_IPLogSearchServer) error
	// Find all IPs in the dataset that match an address and integer netmask.
	IPSearch(*IPSearchRequest, Netograph_IPSearchServer) error
	// Find all IPs in a dataset associated with a given domain.
	IPsForDomain(*IPsForDomainRequest, Netograph_IPsForDomainServer) error
	// Get metadata associated with a specified capture within a dataset.
	MetaForCapture(*MetaForCaptureRequest, Netograph_MetaForCaptureServer) error
	// Search the dataset log for captures matching a metadata query.
	MetaSearch(*MetaSearchRequest, Netograph_MetaSearchServer) error
	// Search the dataset log for captures where any root domain matches a given query.
	RootLogSearch(*RootLogSearchRequest, Netograph_RootLogSearchServer) error
	// Find all roots in a dataset that are associated with a given satellite query.
	RootsForSatellite(*RootsForSatelliteRequest, Netograph_RootsForSatelliteServer) error
	// Search the dataset log for captures where any satellite domain matches a given query.
	SatelliteLogSearch(*SatelliteLogSearchRequest, Netograph_SatelliteLogSearchServer) error
	// Find all satellites in the dataset that are associated with a given root query.
	SatellitesForRoot(*SatellitesForRootRequest, Netograph_SatellitesForRootServer) error
	// Search the dataset log for captures where any root URL matches a given URL query.
	URLLogSearch(*URLLogSearchRequest, Netograph_URLLogSearchServer) error
}

func RegisterNetographServer(s *grpc.Server, srv NetographServer) {
	s.RegisterService(&_Netograph_serviceDesc, srv)
}

func _Netograph_TempCapture_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TempCaptureRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetographServer).TempCapture(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Netograph/TempCapture",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetographServer).TempCapture(ctx, req.(*TempCaptureRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Netograph_Datasets_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(DatasetsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NetographServer).Datasets(m, &netographDatasetsServer{stream})
}

type Netograph_DatasetsServer interface {
	Send(*Dataset) error
	grpc.ServerStream
}

type netographDatasetsServer struct {
	grpc.ServerStream
}

func (x *netographDatasetsServer) Send(m *Dataset) error {
	return x.ServerStream.SendMsg(m)
}

func _Netograph_SubmitCapture_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubmitCaptureRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetographServer).SubmitCapture(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Netograph/SubmitCapture",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetographServer).SubmitCapture(ctx, req.(*SubmitCaptureRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Netograph_CaptureInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CaptureInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NetographServer).CaptureInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Netograph/CaptureInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NetographServer).CaptureInfo(ctx, req.(*CaptureInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Netograph_CaptureLog_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(CaptureLogRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NetographServer).CaptureLog(m, &netographCaptureLogServer{stream})
}

type Netograph_CaptureLogServer interface {
	Send(*CaptureLogResult) error
	grpc.ServerStream
}

type netographCaptureLogServer struct {
	grpc.ServerStream
}

func (x *netographCaptureLogServer) Send(m *CaptureLogResult) error {
	return x.ServerStream.SendMsg(m)
}

func _Netograph_DomainHistory_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(DomainHistoryRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NetographServer).DomainHistory(m, &netographDomainHistoryServer{stream})
}

type Netograph_DomainHistoryServer interface {
	Send(*DomainHistoryResult) error
	grpc.ServerStream
}

type netographDomainHistoryServer struct {
	grpc.ServerStream
}

func (x *netographDomainHistoryServer) Send(m *DomainHistoryResult) error {
	return x.ServerStream.SendMsg(m)
}

func _Netograph_DomainSearch_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(DomainSearchRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NetographServer).DomainSearch(m, &netographDomainSearchServer{stream})
}

type Netograph_DomainSearchServer interface {
	Send(*DomainSearchResult) error
	grpc.ServerStream
}

type netographDomainSearchServer struct {
	grpc.ServerStream
}

func (x *netographDomainSearchServer) Send(m *DomainSearchResult) error {
	return x.ServerStream.SendMsg(m)
}

func _Netograph_DomainsForIP_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(DomainsForIPRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NetographServer).DomainsForIP(m, &netographDomainsForIPServer{stream})
}

type Netograph_DomainsForIPServer interface {
	Send(*DomainsForIPResult) error
	grpc.ServerStream
}

type netographDomainsForIPServer struct {
	grpc.ServerStream
}

func (x *netographDomainsForIPServer) Send(m *DomainsForIPResult) error {
	return x.ServerStream.SendMsg(m)
}

func _Netograph_IPHistory_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(IPHistoryRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NetographServer).IPHistory(m, &netographIPHistoryServer{stream})
}

type Netograph_IPHistoryServer interface {
	Send(*IPHistoryResult) error
	grpc.ServerStream
}

type netographIPHistoryServer struct {
	grpc.ServerStream
}

func (x *netographIPHistoryServer) Send(m *IPHistoryResult) error {
	return x.ServerStream.SendMsg(m)
}

func _Netograph_IPLogSearch_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(IPLogSearchRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NetographServer).IPLogSearch(m, &netographIPLogSearchServer{stream})
}

type Netograph_IPLogSearchServer interface {
	Send(*IPLogSearchResult) error
	grpc.ServerStream
}

type netographIPLogSearchServer struct {
	grpc.ServerStream
}

func (x *netographIPLogSearchServer) Send(m *IPLogSearchResult) error {
	return x.ServerStream.SendMsg(m)
}

func _Netograph_IPSearch_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(IPSearchRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NetographServer).IPSearch(m, &netographIPSearchServer{stream})
}

type Netograph_IPSearchServer interface {
	Send(*IPSearchResult) error
	grpc.ServerStream
}

type netographIPSearchServer struct {
	grpc.ServerStream
}

func (x *netographIPSearchServer) Send(m *IPSearchResult) error {
	return x.ServerStream.SendMsg(m)
}

func _Netograph_IPsForDomain_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(IPsForDomainRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NetographServer).IPsForDomain(m, &netographIPsForDomainServer{stream})
}

type Netograph_IPsForDomainServer interface {
	Send(*IPsForDomainResult) error
	grpc.ServerStream
}

type netographIPsForDomainServer struct {
	grpc.ServerStream
}

func (x *netographIPsForDomainServer) Send(m *IPsForDomainResult) error {
	return x.ServerStream.SendMsg(m)
}

func _Netograph_MetaForCapture_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(MetaForCaptureRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NetographServer).MetaForCapture(m, &netographMetaForCaptureServer{stream})
}

type Netograph_MetaForCaptureServer interface {
	Send(*MetaForCaptureResult) error
	grpc.ServerStream
}

type netographMetaForCaptureServer struct {
	grpc.ServerStream
}

func (x *netographMetaForCaptureServer) Send(m *MetaForCaptureResult) error {
	return x.ServerStream.SendMsg(m)
}

func _Netograph_MetaSearch_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(MetaSearchRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NetographServer).MetaSearch(m, &netographMetaSearchServer{stream})
}

type Netograph_MetaSearchServer interface {
	Send(*MetaSearchResult) error
	grpc.ServerStream
}

type netographMetaSearchServer struct {
	grpc.ServerStream
}

func (x *netographMetaSearchServer) Send(m *MetaSearchResult) error {
	return x.ServerStream.SendMsg(m)
}

func _Netograph_RootLogSearch_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(RootLogSearchRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NetographServer).RootLogSearch(m, &netographRootLogSearchServer{stream})
}

type Netograph_RootLogSearchServer interface {
	Send(*RootLogSearchResult) error
	grpc.ServerStream
}

type netographRootLogSearchServer struct {
	grpc.ServerStream
}

func (x *netographRootLogSearchServer) Send(m *RootLogSearchResult) error {
	return x.ServerStream.SendMsg(m)
}

func _Netograph_RootsForSatellite_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(RootsForSatelliteRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NetographServer).RootsForSatellite(m, &netographRootsForSatelliteServer{stream})
}

type Netograph_RootsForSatelliteServer interface {
	Send(*RootsForSatelliteResult) error
	grpc.ServerStream
}

type netographRootsForSatelliteServer struct {
	grpc.ServerStream
}

func (x *netographRootsForSatelliteServer) Send(m *RootsForSatelliteResult) error {
	return x.ServerStream.SendMsg(m)
}

func _Netograph_SatelliteLogSearch_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SatelliteLogSearchRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NetographServer).SatelliteLogSearch(m, &netographSatelliteLogSearchServer{stream})
}

type Netograph_SatelliteLogSearchServer interface {
	Send(*SatelliteLogSearchResult) error
	grpc.ServerStream
}

type netographSatelliteLogSearchServer struct {
	grpc.ServerStream
}

func (x *netographSatelliteLogSearchServer) Send(m *SatelliteLogSearchResult) error {
	return x.ServerStream.SendMsg(m)
}

func _Netograph_SatellitesForRoot_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SatellitesForRootRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NetographServer).SatellitesForRoot(m, &netographSatellitesForRootServer{stream})
}

type Netograph_SatellitesForRootServer interface {
	Send(*SatellitesForRootResult) error
	grpc.ServerStream
}

type netographSatellitesForRootServer struct {
	grpc.ServerStream
}

func (x *netographSatellitesForRootServer) Send(m *SatellitesForRootResult) error {
	return x.ServerStream.SendMsg(m)
}

func _Netograph_URLLogSearch_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(URLLogSearchRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NetographServer).URLLogSearch(m, &netographURLLogSearchServer{stream})
}

type Netograph_URLLogSearchServer interface {
	Send(*URLLogSearchResult) error
	grpc.ServerStream
}

type netographURLLogSearchServer struct {
	grpc.ServerStream
}

func (x *netographURLLogSearchServer) Send(m *URLLogSearchResult) error {
	return x.ServerStream.SendMsg(m)
}

var _Netograph_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Netograph",
	HandlerType: (*NetographServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "TempCapture",
			Handler:    _Netograph_TempCapture_Handler,
		},
		{
			MethodName: "SubmitCapture",
			Handler:    _Netograph_SubmitCapture_Handler,
		},
		{
			MethodName: "CaptureInfo",
			Handler:    _Netograph_CaptureInfo_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Datasets",
			Handler:       _Netograph_Datasets_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "CaptureLog",
			Handler:       _Netograph_CaptureLog_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "DomainHistory",
			Handler:       _Netograph_DomainHistory_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "DomainSearch",
			Handler:       _Netograph_DomainSearch_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "DomainsForIP",
			Handler:       _Netograph_DomainsForIP_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "IPHistory",
			Handler:       _Netograph_IPHistory_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "IPLogSearch",
			Handler:       _Netograph_IPLogSearch_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "IPSearch",
			Handler:       _Netograph_IPSearch_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "IPsForDomain",
			Handler:       _Netograph_IPsForDomain_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "MetaForCapture",
			Handler:       _Netograph_MetaForCapture_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "MetaSearch",
			Handler:       _Netograph_MetaSearch_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "RootLogSearch",
			Handler:       _Netograph_RootLogSearch_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "RootsForSatellite",
			Handler:       _Netograph_RootsForSatellite_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "SatelliteLogSearch",
			Handler:       _Netograph_SatelliteLogSearch_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "SatellitesForRoot",
			Handler:       _Netograph_SatellitesForRoot_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "URLLogSearch",
			Handler:       _Netograph_URLLogSearch_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "proto/ngapi/ngapi.proto",
}

func init() { proto.RegisterFile("proto/ngapi/ngapi.proto", fileDescriptor_ngapi_e0b646946dae5de6) }

var fileDescriptor_ngapi_e0b646946dae5de6 = []byte{
	// 1401 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x58, 0xeb, 0x8a, 0xdb, 0x46,
	0x14, 0x46, 0xb6, 0xbc, 0xeb, 0x3d, 0xce, 0xc5, 0x3e, 0xf6, 0x26, 0x8a, 0xe8, 0x65, 0x11, 0xa5,
	0x5d, 0x28, 0xcc, 0xba, 0xdb, 0x36, 0x14, 0x52, 0x42, 0x9b, 0x84, 0xd0, 0x2d, 0x49, 0x59, 0xb4,
	0x29, 0x81, 0x16, 0x0a, 0xb3, 0xf6, 0xec, 0xae, 0xb0, 0x64, 0x29, 0x9a, 0x51, 0xd2, 0xfd, 0x91,
	0x57, 0xe8, 0x6b, 0xf4, 0x47, 0xfe, 0xf6, 0xa1, 0xfa, 0x18, 0x65, 0x46, 0x17, 0x6b, 0x24, 0x79,
	0x63, 0x37, 0xc1, 0xe4, 0x8f, 0xf1, 0x99, 0x99, 0x73, 0x9d, 0x4f, 0xe7, 0x32, 0x70, 0x3b, 0x8a,
	0x43, 0x11, 0x1e, 0xcc, 0xcf, 0x69, 0xe4, 0xa5, 0xbf, 0x44, 0xad, 0xd8, 0x9f, 0x9e, 0x87, 0xe1,
	0xb9, 0xcf, 0x0e, 0x14, 0x75, 0x9a, 0x9c, 0x1d, 0x08, 0x2f, 0x60, 0x5c, 0xd0, 0x20, 0x4a, 0x0f,
	0x38, 0x03, 0xb8, 0xf9, 0x88, 0x0a, 0xca, 0x99, 0xe0, 0x2e, 0x7b, 0x91, 0x30, 0x2e, 0x9c, 0x37,
	0x06, 0x6c, 0x67, 0x6b, 0x88, 0x60, 0xce, 0x69, 0xc0, 0x2c, 0x63, 0xcf, 0xd8, 0xdf, 0x71, 0xd5,
	0x7f, 0xdc, 0x83, 0xde, 0x94, 0xf1, 0x49, 0xec, 0x45, 0xc2, 0x0b, 0xe7, 0x56, 0x4b, 0x6d, 0x95,
	0x97, 0xd0, 0x82, 0xed, 0x24, 0xf6, 0x4f, 0x29, 0x67, 0x56, 0x5b, 0xed, 0xe6, 0x24, 0x7e, 0x03,
	0xdb, 0x53, 0xe6, 0x33, 0xc1, 0xa6, 0x96, 0xb9, 0x67, 0xec, 0xf7, 0x0e, 0x6d, 0x92, 0x5a, 0x48,
	0x72, 0x0b, 0xc9, 0xb3, 0xdc, 0x42, 0x37, 0x3f, 0x8a, 0x36, 0x74, 0x63, 0x46, 0xa7, 0xe1, 0xdc,
	0xbf, 0xb4, 0x3a, 0x7b, 0xc6, 0x7e, 0xd7, 0x2d, 0x68, 0xe7, 0xdf, 0x16, 0xc0, 0x43, 0x1a, 0x9d,
	0x24, 0x41, 0x40, 0xe3, 0x4b, 0xbc, 0x01, 0x2d, 0x6f, 0x9a, 0x99, 0xdb, 0xf2, 0xa6, 0x78, 0x0b,
	0xb6, 0x28, 0x97, 0xde, 0x65, 0x76, 0x66, 0x14, 0x7e, 0x0e, 0x9d, 0x38, 0x0c, 0x05, 0xb7, 0xda,
	0x7b, 0xed, 0xfd, 0xde, 0x61, 0x9f, 0x2c, 0x64, 0x10, 0x37, 0x0c, 0x85, 0x9b, 0x6e, 0x23, 0x01,
	0x53, 0x86, 0x6c, 0x05, 0x6b, 0xd5, 0x39, 0xfc, 0x0c, 0xcc, 0xc8, 0xa7, 0x73, 0x65, 0x66, 0x45,
	0xec, 0xb1, 0x4f, 0xe7, 0xae, 0xda, 0xc5, 0x2f, 0xa0, 0xc3, 0x05, 0x15, 0xdc, 0xda, 0x52, 0xc7,
	0x06, 0xe5, 0x63, 0x27, 0x72, 0xc3, 0x4d, 0xf7, 0x6d, 0x1b, 0x4c, 0xc9, 0x26, 0xef, 0x21, 0x89,
	0x7d, 0x6e, 0x19, 0x7b, 0x6d, 0x79, 0x0f, 0xf2, 0xbf, 0xdc, 0x93, 0x96, 0x36, 0xee, 0x9d, 0x40,
	0x47, 0xc9, 0xc1, 0x11, 0x74, 0xce, 0xfc, 0xf0, 0x15, 0x57, 0x21, 0xe9, 0xb8, 0x29, 0x81, 0x9f,
	0x00, 0xbc, 0x62, 0xa7, 0x3c, 0x9c, 0xcc, 0xf2, 0xc8, 0x74, 0xdc, 0xd2, 0x8a, 0xe4, 0xba, 0x08,
	0xb9, 0x8a, 0x8e, 0xe2, 0x52, 0x84, 0x73, 0x08, 0xdd, 0xa7, 0x4c, 0xd0, 0x29, 0x15, 0x14, 0xfb,
	0xd0, 0x9e, 0xb1, 0xcb, 0x2c, 0xd0, 0xf2, 0xaf, 0xe4, 0x79, 0x49, 0xfd, 0x84, 0x65, 0x81, 0x4e,
	0x09, 0xe7, 0x3e, 0xe0, 0x43, 0x1a, 0x89, 0x24, 0x66, 0x47, 0xf3, 0xb3, 0x30, 0x83, 0x98, 0x04,
	0xc8, 0x34, 0x45, 0x58, 0x26, 0x21, 0x27, 0xb3, 0xfb, 0x6b, 0xe5, 0xf7, 0xe7, 0xfc, 0x00, 0x03,
	0x8d, 0x9f, 0x27, 0xbe, 0xc0, 0x2f, 0x01, 0x26, 0x34, 0xe2, 0x69, 0xc0, 0x94, 0x84, 0xde, 0x61,
	0xaf, 0x14, 0x43, 0xb7, 0xb4, 0xed, 0xfc, 0x5e, 0x48, 0x78, 0x12, 0x9e, 0xbf, 0xdd, 0x80, 0x11,
	0x74, 0x7c, 0x2f, 0xf0, 0x84, 0xb2, 0xa1, 0xed, 0xa6, 0x84, 0x84, 0x51, 0xcc, 0x78, 0x12, 0xe4,
	0x80, 0xce, 0x28, 0xe7, 0x39, 0xf4, 0xcb, 0xc2, 0xd7, 0xb6, 0xae, 0x24, 0xb8, 0xa5, 0x09, 0xfe,
	0x03, 0x46, 0x8f, 0xc2, 0x80, 0x7a, 0xf3, 0x9f, 0x3c, 0x2e, 0xc2, 0xf8, 0xf2, 0xed, 0x86, 0xdf,
	0x82, 0xad, 0xa9, 0xe2, 0xc8, 0x25, 0xa5, 0xd4, 0xc2, 0xa1, 0x76, 0xc9, 0x21, 0xe7, 0x01, 0x0c,
	0x2b, 0xf2, 0xd7, 0x8f, 0x2c, 0xcf, 0x65, 0x9c, 0x30, 0x1a, 0x4f, 0x2e, 0x56, 0x8a, 0xed, 0x8b,
	0x84, 0xc5, 0x97, 0x39, 0x44, 0x14, 0xd1, 0x6c, 0x60, 0x29, 0x30, 0xa6, 0x16, 0x98, 0x57, 0x80,
	0xba, 0x52, 0x65, 0xf7, 0xc2, 0x79, 0x43, 0x73, 0x7e, 0x49, 0x78, 0xf1, 0x2b, 0xb8, 0xee, 0x53,
	0xc1, 0xb8, 0x98, 0xa4, 0xb7, 0xa7, 0x74, 0x57, 0x5c, 0xd5, 0x4f, 0x38, 0x41, 0xee, 0x2d, 0x7f,
	0x1c, 0xc6, 0x47, 0xc7, 0xab, 0x41, 0x39, 0x2a, 0xa0, 0x1c, 0xad, 0xe9, 0xe7, 0x1b, 0x23, 0x77,
	0x34, 0xd7, 0x77, 0xa5, 0xa3, 0x55, 0x65, 0xeb, 0x3b, 0x88, 0x0e, 0x5c, 0xa3, 0x9c, 0x87, 0x13,
	0x8f, 0xca, 0x24, 0xce, 0x2d, 0x53, 0xe5, 0x13, 0x6d, 0xad, 0x64, 0x6d, 0x47, 0xb3, 0xd6, 0x85,
	0xfe, 0xd1, 0xf1, 0xca, 0x50, 0x5d, 0x29, 0x32, 0xce, 0x7d, 0xb8, 0x59, 0x92, 0xb9, 0x3e, 0x3c,
	0x7d, 0xc0, 0xa3, 0xe3, 0x27, 0xe1, 0xf9, 0xaa, 0xe8, 0x7c, 0xb7, 0xfb, 0xba, 0x80, 0x81, 0xa6,
	0x6d, 0xfd, 0x54, 0x50, 0xd5, 0xbf, 0x2c, 0xe7, 0xcc, 0xe0, 0xc6, 0xd1, 0xb1, 0xa6, 0x26, 0xe5,
	0x34, 0x1a, 0x38, 0xdf, 0x19, 0xf5, 0xaf, 0xe5, 0x25, 0xfc, 0xdf, 0x08, 0x22, 0x98, 0x01, 0xe5,
	0xb3, 0xac, 0x8a, 0xa8, 0xff, 0x8b, 0xa8, 0x9a, 0xcd, 0x51, 0xd5, 0x71, 0xc5, 0x61, 0x78, 0x74,
	0x2c, 0x3f, 0x80, 0xf4, 0x53, 0xd8, 0x4c, 0x8a, 0x91, 0x9f, 0x9e, 0xae, 0xf5, 0x43, 0xfe, 0xf4,
	0x42, 0xd8, 0x95, 0x55, 0xf9, 0x71, 0x18, 0x67, 0x95, 0x68, 0xed, 0x22, 0xbb, 0x66, 0x78, 0x5e,
	0xc3, 0xa8, 0xaa, 0x50, 0xc5, 0xe7, 0x63, 0x30, 0x03, 0x26, 0x68, 0x06, 0xf3, 0x1d, 0x92, 0xf7,
	0x0a, 0xae, 0x5a, 0x2e, 0x3a, 0xa9, 0xd6, 0x8a, 0x9d, 0xd4, 0x32, 0xf8, 0xbf, 0x80, 0x81, 0x94,
	0xbc, 0xc9, 0x9a, 0xf3, 0x12, 0xfa, 0x65, 0x95, 0xab, 0x78, 0xbb, 0xc4, 0xfa, 0x4a, 0x46, 0x30,
	0xaf, 0xce, 0x60, 0x33, 0xc0, 0x67, 0x2c, 0x88, 0x2a, 0xf7, 0xea, 0xc0, 0xb5, 0x79, 0x28, 0xbc,
	0x33, 0x6f, 0xa2, 0x90, 0x91, 0x39, 0xac, 0xad, 0x15, 0x3d, 0x61, 0x6b, 0xd1, 0x13, 0x16, 0x16,
	0xa7, 0x1d, 0x6f, 0xd5, 0x62, 0xe7, 0x1e, 0x0c, 0x34, 0x65, 0x39, 0xe6, 0xb3, 0xf6, 0xd9, 0xd0,
	0xda, 0xe7, 0x14, 0x41, 0xed, 0xa2, 0x4d, 0xfb, 0xdb, 0x80, 0xd1, 0x49, 0x72, 0x1a, 0x78, 0x62,
	0x65, 0x10, 0x56, 0xdd, 0x68, 0x5d, 0xe1, 0x46, 0xbb, 0xc1, 0x0d, 0xb3, 0xd1, 0x0d, 0xd9, 0xda,
	0xf2, 0x99, 0x17, 0xc5, 0x6c, 0xc2, 0xe6, 0x42, 0x7d, 0x2a, 0x6d, 0xb7, 0xb4, 0xe2, 0x3c, 0x87,
	0x61, 0xc5, 0xd0, 0x2b, 0x1d, 0xb5, 0x60, 0x5b, 0x32, 0x47, 0x2c, 0xfd, 0x5e, 0xba, 0x6e, 0x4e,
	0xd6, 0x42, 0x20, 0x60, 0x24, 0xdb, 0xf1, 0x35, 0x0a, 0xce, 0xfb, 0x80, 0xe6, 0x1c, 0x86, 0x15,
	0xad, 0xca, 0x1d, 0x04, 0x53, 0xce, 0x2f, 0xf9, 0xdc, 0x26, 0xff, 0x2f, 0xad, 0x0a, 0x3a, 0x24,
	0xdb, 0x57, 0x43, 0xf2, 0x4f, 0xb0, 0xa4, 0x3e, 0x99, 0x1c, 0x4f, 0xa8, 0x60, 0xbe, 0xef, 0x09,
	0xb6, 0x19, 0x4f, 0xff, 0x31, 0xe0, 0x76, 0x83, 0xea, 0xa5, 0xee, 0x7e, 0x04, 0x3b, 0x3c, 0x3f,
	0x96, 0xe9, 0x5d, 0x2c, 0xac, 0xe5, 0xf4, 0x3b, 0xa5, 0xe7, 0x4b, 0xb8, 0x53, 0x58, 0xbb, 0x61,
	0x6c, 0xbc, 0x06, 0xab, 0x49, 0xb5, 0x8a, 0x98, 0x16, 0x1d, 0xa3, 0x1a, 0x9d, 0xf7, 0x05, 0x95,
	0x42, 0xbd, 0xbc, 0x34, 0x35, 0x56, 0x6f, 0x0c, 0x2a, 0x0d, 0xaa, 0x3f, 0x74, 0xa8, 0x70, 0x18,
	0xfe, 0xea, 0x3e, 0xd9, 0x30, 0x48, 0x66, 0x80, 0xba, 0x52, 0x15, 0xa5, 0x3e, 0xb4, 0x93, 0xd8,
	0xcf, 0xc7, 0xfb, 0x24, 0xf6, 0xdf, 0x0b, 0x24, 0x0e, 0xff, 0xda, 0x81, 0x9d, 0x5f, 0x98, 0x08,
	0xcf, 0x63, 0x1a, 0x5d, 0xe0, 0x5d, 0xe8, 0x95, 0x2a, 0x0e, 0x0e, 0x49, 0xbd, 0xd8, 0xd9, 0x48,
	0xea, 0x45, 0x69, 0x1f, 0xba, 0xf9, 0x9b, 0x15, 0xf6, 0x49, 0xe5, 0xf9, 0xca, 0xee, 0xe6, 0x2b,
	0x63, 0x03, 0xbf, 0x87, 0xeb, 0x5a, 0xb2, 0xc7, 0x5d, 0xd2, 0x54, 0xa5, 0xec, 0x11, 0x69, 0xaa,
	0x09, 0x77, 0xa1, 0x57, 0x7a, 0x7b, 0xc0, 0x21, 0xa9, 0xbf, 0x64, 0xd8, 0x48, 0xea, 0xcf, 0x13,
	0xdf, 0xaa, 0x17, 0xa9, 0xec, 0x51, 0x00, 0x8b, 0x13, 0x8b, 0xe7, 0x07, 0x7b, 0x40, 0xaa, 0xaf,
	0x06, 0x63, 0x03, 0xef, 0xc3, 0x75, 0x6d, 0x24, 0xc7, 0x5d, 0xd2, 0xf4, 0x04, 0x60, 0x8f, 0x48,
	0xc3, 0xe4, 0x3e, 0x36, 0xf0, 0x1e, 0x5c, 0x2b, 0x4f, 0xc6, 0x98, 0x9f, 0xd3, 0xd0, 0x64, 0x0f,
	0x49, 0x7d, 0x7c, 0x2e, 0x33, 0xa7, 0xd3, 0x66, 0xc1, 0xac, 0x0d, 0xbb, 0x05, 0x73, 0x79, 0x24,
	0x1d, 0x1b, 0x78, 0x08, 0x3b, 0xc5, 0xa4, 0x86, 0x03, 0x52, 0x9d, 0x04, 0xed, 0x3e, 0xa9, 0x0c,
	0x72, 0x63, 0x03, 0xbf, 0x83, 0x5e, 0x69, 0x5e, 0xc2, 0x21, 0xa9, 0xcf, 0x6a, 0x36, 0x92, 0xda,
	0x48, 0x35, 0x36, 0xf0, 0x00, 0xba, 0xf9, 0x48, 0x82, 0x52, 0xb2, 0xce, 0x73, 0x93, 0xe8, 0xc3,
	0x51, 0xea, 0x5b, 0xb9, 0x9d, 0xc7, 0x11, 0x69, 0x98, 0x29, 0xec, 0x21, 0xa9, 0xf7, 0xfc, 0x63,
	0x03, 0x7f, 0x84, 0x1b, 0x7a, 0xb7, 0x8b, 0xb7, 0x48, 0x63, 0xbf, 0x6d, 0xef, 0x92, 0xa6, 0xb6,
	0x78, 0x6c, 0x48, 0x3c, 0x2c, 0xda, 0x47, 0x44, 0x52, 0x6b, 0x5f, 0xed, 0x01, 0xa9, 0xf6, 0x97,
	0x29, 0x1e, 0xb4, 0xd2, 0x8e, 0xbb, 0xa4, 0xa9, 0xc1, 0xb0, 0x47, 0xa4, 0xa1, 0x03, 0x18, 0x1b,
	0xf8, 0x33, 0x0c, 0x6a, 0xf5, 0x12, 0xef, 0x90, 0x65, 0xe5, 0xdb, 0xb6, 0xc8, 0x92, 0xf2, 0x3a,
	0x36, 0xf0, 0x29, 0x60, 0xbd, 0x94, 0xa0, 0x4d, 0x96, 0x96, 0x36, 0xfb, 0x0e, 0x59, 0x56, 0x7b,
	0x52, 0xd3, 0x6a, 0xf9, 0x19, 0x4b, 0x1c, 0x95, 0x72, 0x61, 0x5b, 0x64, 0x49, 0x3a, 0x4f, 0x6f,
	0xb7, 0x9c, 0xc0, 0x70, 0x44, 0x1a, 0x92, 0xa8, 0x3d, 0x24, 0xf5, 0x2c, 0x37, 0x36, 0x1e, 0x6c,
	0xff, 0xd6, 0x51, 0xcf, 0xe5, 0xa7, 0x5b, 0x6a, 0x0e, 0xf9, 0xfa, 0xbf, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x0a, 0xbf, 0x6a, 0x8e, 0x4a, 0x17, 0x00, 0x00,
}
